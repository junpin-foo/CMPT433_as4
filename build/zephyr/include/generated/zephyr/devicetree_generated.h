/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /home/junpinfoo/cmpt433/work/as4/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /gpio@600010
 *   4   /gpio@601010
 *   5   /memory@0
 *   6   /memory@41010000
 *   7   /memory@a1000000
 *   8   /memory@a1100000
 *   9   /memory@a1200000
 *   10  /soc
 *   11  /interrupt-controller@7ff0000
 *   12  /timer@4800000
 *   13  /uart@2800000
 *   14  /pinctrl@f4000
 *   15  /pinctrl@f4000/uart1_rx_default
 *   16  /pinctrl@f4000/uart1_tx_default
 *   17  /uart@2810000
 *   18  /uart@2820000
 *   19  /uart@2830000
 *   20  /uart@2840000
 *   21  /uart@2850000
 *   22  /uart@2860000
 *   23  /uart@4a00000
 *   24  /cpus
 *   25  /cpus/cpu@0
 *   26  /pinctrl_mcu@4084000
 *   27  /pinctrl_mcu@4084000/mcu_gpio0_led_btn_default
 *   28  /gpio@4201010
 *   29  /leds
 *   30  /leds/btn_gpio23
 *   31  /leds/btn_gpio24
 *   32  /leds/led_gpio7
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FULL_NAME_UNQUOTED /
#define DT_N_FULL_NAME_TOKEN _
#define DT_N_FULL_NAME_UPPER_TOKEN _

/* Helpers for dealing with node labels: */
#define DT_N_NODELABEL_NUM 0
#define DT_N_FOREACH_NODELABEL(fn) 
#define DT_N_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_FOREACH_ANCESTOR(fn) 

/* Helper macros for child nodes of this node. */
#define DT_N_CHILD_NUM 25
#define DT_N_CHILD_NUM_STATUS_OKAY 16
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_gpio_4201010) fn(DT_N_S_uart_4a00000) fn(DT_N_S_pinctrl_f4000) fn(DT_N_S_gpio_600010) fn(DT_N_S_gpio_601010) fn(DT_N_S_uart_2800000) fn(DT_N_S_uart_2810000) fn(DT_N_S_uart_2820000) fn(DT_N_S_uart_2830000) fn(DT_N_S_uart_2840000) fn(DT_N_S_uart_2850000) fn(DT_N_S_uart_2860000) fn(DT_N_S_cpus) fn(DT_N_S_memory_0) fn(DT_N_S_memory_41010000) fn(DT_N_S_interrupt_controller_7ff0000) fn(DT_N_S_timer_4800000) fn(DT_N_S_memory_a1000000) fn(DT_N_S_memory_a1100000) fn(DT_N_S_memory_a1200000) fn(DT_N_S_leds) fn(DT_N_S_pinctrl_mcu_4084000)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_4201010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_uart_4a00000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_f4000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_600010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_601010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_uart_2800000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_uart_2810000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_uart_2820000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_uart_2830000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_uart_2840000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_uart_2850000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_uart_2860000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_41010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_interrupt_controller_7ff0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_timer_4800000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_a1000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_a1100000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_a1200000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_mcu_4084000)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_gpio_4201010, __VA_ARGS__) fn(DT_N_S_uart_4a00000, __VA_ARGS__) fn(DT_N_S_pinctrl_f4000, __VA_ARGS__) fn(DT_N_S_gpio_600010, __VA_ARGS__) fn(DT_N_S_gpio_601010, __VA_ARGS__) fn(DT_N_S_uart_2800000, __VA_ARGS__) fn(DT_N_S_uart_2810000, __VA_ARGS__) fn(DT_N_S_uart_2820000, __VA_ARGS__) fn(DT_N_S_uart_2830000, __VA_ARGS__) fn(DT_N_S_uart_2840000, __VA_ARGS__) fn(DT_N_S_uart_2850000, __VA_ARGS__) fn(DT_N_S_uart_2860000, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_0, __VA_ARGS__) fn(DT_N_S_memory_41010000, __VA_ARGS__) fn(DT_N_S_interrupt_controller_7ff0000, __VA_ARGS__) fn(DT_N_S_timer_4800000, __VA_ARGS__) fn(DT_N_S_memory_a1000000, __VA_ARGS__) fn(DT_N_S_memory_a1100000, __VA_ARGS__) fn(DT_N_S_memory_a1200000, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_pinctrl_mcu_4084000, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_4201010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_uart_4a00000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_f4000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_600010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_601010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_uart_2800000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_uart_2810000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_uart_2820000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_uart_2830000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_uart_2840000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_uart_2850000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_uart_2860000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_41010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_interrupt_controller_7ff0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_timer_4800000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_a1000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_a1100000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_a1200000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_mcu_4084000, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_gpio_4201010) fn(DT_N_S_pinctrl_f4000) fn(DT_N_S_uart_2810000) fn(DT_N_S_cpus) fn(DT_N_S_memory_0) fn(DT_N_S_memory_41010000) fn(DT_N_S_interrupt_controller_7ff0000) fn(DT_N_S_timer_4800000) fn(DT_N_S_memory_a1000000) fn(DT_N_S_memory_a1100000) fn(DT_N_S_memory_a1200000) fn(DT_N_S_leds) fn(DT_N_S_pinctrl_mcu_4084000)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_4201010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_f4000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_uart_2810000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_41010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_interrupt_controller_7ff0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_timer_4800000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_a1000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_a1100000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_a1200000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_mcu_4084000)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_gpio_4201010, __VA_ARGS__) fn(DT_N_S_pinctrl_f4000, __VA_ARGS__) fn(DT_N_S_uart_2810000, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_0, __VA_ARGS__) fn(DT_N_S_memory_41010000, __VA_ARGS__) fn(DT_N_S_interrupt_controller_7ff0000, __VA_ARGS__) fn(DT_N_S_timer_4800000, __VA_ARGS__) fn(DT_N_S_memory_a1000000, __VA_ARGS__) fn(DT_N_S_memory_a1100000, __VA_ARGS__) fn(DT_N_S_memory_a1200000, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_pinctrl_mcu_4084000, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio_4201010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_f4000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_uart_2810000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_41010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_interrupt_controller_7ff0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_timer_4800000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_a1000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_a1100000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_a1200000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_mcu_4084000, __VA_ARGS__)

/* Node's hash: */
#define DT_N_HASH il7asoJjJEMhngUeSt4tHVu8Zxx4EFG_FDeJfL3_oPE

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /gpio@600010 */ \
	4, /* /gpio@601010 */ \
	5, /* /memory@0 */ \
	6, /* /memory@41010000 */ \
	7, /* /memory@a1000000 */ \
	8, /* /memory@a1100000 */ \
	9, /* /memory@a1200000 */ \
	10, /* /soc */ \
	11, /* /interrupt-controller@7ff0000 */ \
	12, /* /timer@4800000 */ \
	13, /* /uart@2800000 */ \
	14, /* /pinctrl@f4000 */ \
	17, /* /uart@2810000 */ \
	18, /* /uart@2820000 */ \
	19, /* /uart@2830000 */ \
	20, /* /uart@2840000 */ \
	21, /* /uart@2850000 */ \
	22, /* /uart@2860000 */ \
	23, /* /uart@4a00000 */ \
	24, /* /cpus */ \
	26, /* /pinctrl_mcu@4084000 */ \
	28, /* /gpio@4201010 */ \
	29, /* /leds */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_beagle_beagley_ai DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_IRQ_LEVEL 0
#define DT_N_COMPAT_MATCHES_beagle_beagley_ai 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "BeagleBoard.org Foundation"
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "beagley-ai"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"beagle,beagley-ai"}
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_IDX_0 "beagle,beagley-ai"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED beagle,beagley-ai
#define DT_N_P_compatible_IDX_0_STRING_TOKEN beagle_beagley_ai
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN BEAGLE_BEAGLEY_AI
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"
#define DT_N_S_aliases_FULL_NAME_UNQUOTED aliases
#define DT_N_S_aliases_FULL_NAME_TOKEN aliases
#define DT_N_S_aliases_FULL_NAME_UPPER_TOKEN ALIASES

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_aliases_NODELABEL_NUM 0
#define DT_N_S_aliases_FOREACH_NODELABEL(fn) 
#define DT_N_S_aliases_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_CHILD_NUM 0
#define DT_N_S_aliases_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_aliases_HASH QavYY6yplHKhLPRKsRzaLCGlR0CWZ0JUNJakcBCfDXA

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_IRQ_LEVEL 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"
#define DT_N_S_chosen_FULL_NAME_UNQUOTED chosen
#define DT_N_S_chosen_FULL_NAME_TOKEN chosen
#define DT_N_S_chosen_FULL_NAME_UPPER_TOKEN CHOSEN

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_chosen_NODELABEL_NUM 0
#define DT_N_S_chosen_FOREACH_NODELABEL(fn) 
#define DT_N_S_chosen_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_CHILD_NUM 0
#define DT_N_S_chosen_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_chosen_HASH qNExeeLInzqaWpm1KroyYDk4lRIxVO2ig78mq_hOnA8

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_IRQ_LEVEL 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /gpio@600010
 *
 * Node identifier: DT_N_S_gpio_600010
 *
 * Binding (compatible = ti,davinci-gpio):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/gpio/ti,davinci-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_600010_PATH "/gpio@600010"

/* Node's name with unit-address: */
#define DT_N_S_gpio_600010_FULL_NAME "gpio@600010"
#define DT_N_S_gpio_600010_FULL_NAME_UNQUOTED gpio@600010
#define DT_N_S_gpio_600010_FULL_NAME_TOKEN gpio_600010
#define DT_N_S_gpio_600010_FULL_NAME_UPPER_TOKEN GPIO_600010

/* Node parent (/) identifier: */
#define DT_N_S_gpio_600010_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_600010_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio_600010_NODELABEL_NUM 1
#define DT_N_S_gpio_600010_FOREACH_NODELABEL(fn) fn(gpio0)
#define DT_N_S_gpio_600010_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio0, __VA_ARGS__)
#define DT_N_S_gpio_600010_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_600010_CHILD_NUM 0
#define DT_N_S_gpio_600010_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_gpio_600010_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_600010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_600010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_600010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_600010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_600010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_600010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_600010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_gpio_600010_HASH rzNyt2bqak26Ry9dQV_lPTFbAeJJBgnCwGe9_9AGSHk

/* Node's dependency ordinal: */
#define DT_N_S_gpio_600010_ORD 3
#define DT_N_S_gpio_600010_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_600010_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_600010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_600010_EXISTS 1
#define DT_N_INST_1_ti_davinci_gpio DT_N_S_gpio_600010
#define DT_N_NODELABEL_gpio0        DT_N_S_gpio_600010

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_600010_REG_NUM 1
#define DT_N_S_gpio_600010_REG_IDX_0_EXISTS 1
#define DT_N_S_gpio_600010_REG_IDX_0_VAL_ADDRESS 6291472 /* 0x600010 */
#define DT_N_S_gpio_600010_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_gpio_600010_RANGES_NUM 0
#define DT_N_S_gpio_600010_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_600010_IRQ_NUM 0
#define DT_N_S_gpio_600010_IRQ_LEVEL 0
#define DT_N_S_gpio_600010_COMPAT_MATCHES_ti_davinci_gpio 1
#define DT_N_S_gpio_600010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_gpio_600010_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_gpio_600010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_gpio_600010_COMPAT_MODEL_IDX_0 "davinci-gpio"
#define DT_N_S_gpio_600010_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_600010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_600010_P_reg {6291472 /* 0x600010 */, 256 /* 0x100 */}
#define DT_N_S_gpio_600010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_gpio_600010_P_reg_IDX_0 6291472
#define DT_N_S_gpio_600010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_gpio_600010_P_reg_IDX_1 256
#define DT_N_S_gpio_600010_P_reg_EXISTS 1
#define DT_N_S_gpio_600010_P_status "disabled"
#define DT_N_S_gpio_600010_P_status_STRING_UNQUOTED disabled
#define DT_N_S_gpio_600010_P_status_STRING_TOKEN disabled
#define DT_N_S_gpio_600010_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_gpio_600010_P_status_IDX_0 "disabled"
#define DT_N_S_gpio_600010_P_status_IDX_0_EXISTS 1
#define DT_N_S_gpio_600010_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_gpio_600010_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_gpio_600010_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_600010, status, 0)
#define DT_N_S_gpio_600010_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_600010, status, 0)
#define DT_N_S_gpio_600010_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_600010, status, 0, __VA_ARGS__)
#define DT_N_S_gpio_600010_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_600010, status, 0, __VA_ARGS__)
#define DT_N_S_gpio_600010_P_status_LEN 1
#define DT_N_S_gpio_600010_P_status_EXISTS 1
#define DT_N_S_gpio_600010_P_compatible {"ti,davinci-gpio"}
#define DT_N_S_gpio_600010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_600010_P_compatible_IDX_0 "ti,davinci-gpio"
#define DT_N_S_gpio_600010_P_compatible_IDX_0_STRING_UNQUOTED ti,davinci-gpio
#define DT_N_S_gpio_600010_P_compatible_IDX_0_STRING_TOKEN ti_davinci_gpio
#define DT_N_S_gpio_600010_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_DAVINCI_GPIO
#define DT_N_S_gpio_600010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_600010, compatible, 0)
#define DT_N_S_gpio_600010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_600010, compatible, 0)
#define DT_N_S_gpio_600010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_600010, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_600010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_600010, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_600010_P_compatible_LEN 1
#define DT_N_S_gpio_600010_P_compatible_EXISTS 1
#define DT_N_S_gpio_600010_P_zephyr_deferred_init 0
#define DT_N_S_gpio_600010_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_gpio_600010_P_wakeup_source 0
#define DT_N_S_gpio_600010_P_wakeup_source_EXISTS 1
#define DT_N_S_gpio_600010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_gpio_600010_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_gpio_600010_P_gpio_controller 1
#define DT_N_S_gpio_600010_P_gpio_controller_EXISTS 1
#define DT_N_S_gpio_600010_P_ngpios 92
#define DT_N_S_gpio_600010_P_ngpios_EXISTS 1

/*
 * Devicetree node: /gpio@601010
 *
 * Node identifier: DT_N_S_gpio_601010
 *
 * Binding (compatible = ti,davinci-gpio):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/gpio/ti,davinci-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_601010_PATH "/gpio@601010"

/* Node's name with unit-address: */
#define DT_N_S_gpio_601010_FULL_NAME "gpio@601010"
#define DT_N_S_gpio_601010_FULL_NAME_UNQUOTED gpio@601010
#define DT_N_S_gpio_601010_FULL_NAME_TOKEN gpio_601010
#define DT_N_S_gpio_601010_FULL_NAME_UPPER_TOKEN GPIO_601010

/* Node parent (/) identifier: */
#define DT_N_S_gpio_601010_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_601010_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio_601010_NODELABEL_NUM 1
#define DT_N_S_gpio_601010_FOREACH_NODELABEL(fn) fn(gpio1)
#define DT_N_S_gpio_601010_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio1, __VA_ARGS__)
#define DT_N_S_gpio_601010_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_601010_CHILD_NUM 0
#define DT_N_S_gpio_601010_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_gpio_601010_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_601010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_601010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_601010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_601010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_601010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_601010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_601010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_gpio_601010_HASH xzGagQZA6UMW3QQGzSnjcCMMD1lVdust77Dl8C23AM8

/* Node's dependency ordinal: */
#define DT_N_S_gpio_601010_ORD 4
#define DT_N_S_gpio_601010_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_601010_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_601010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_601010_EXISTS 1
#define DT_N_INST_2_ti_davinci_gpio DT_N_S_gpio_601010
#define DT_N_NODELABEL_gpio1        DT_N_S_gpio_601010

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_601010_REG_NUM 1
#define DT_N_S_gpio_601010_REG_IDX_0_EXISTS 1
#define DT_N_S_gpio_601010_REG_IDX_0_VAL_ADDRESS 6295568 /* 0x601010 */
#define DT_N_S_gpio_601010_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_gpio_601010_RANGES_NUM 0
#define DT_N_S_gpio_601010_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_601010_IRQ_NUM 0
#define DT_N_S_gpio_601010_IRQ_LEVEL 0
#define DT_N_S_gpio_601010_COMPAT_MATCHES_ti_davinci_gpio 1
#define DT_N_S_gpio_601010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_gpio_601010_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_gpio_601010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_gpio_601010_COMPAT_MODEL_IDX_0 "davinci-gpio"
#define DT_N_S_gpio_601010_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_601010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_601010_P_reg {6295568 /* 0x601010 */, 256 /* 0x100 */}
#define DT_N_S_gpio_601010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_gpio_601010_P_reg_IDX_0 6295568
#define DT_N_S_gpio_601010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_gpio_601010_P_reg_IDX_1 256
#define DT_N_S_gpio_601010_P_reg_EXISTS 1
#define DT_N_S_gpio_601010_P_status "disabled"
#define DT_N_S_gpio_601010_P_status_STRING_UNQUOTED disabled
#define DT_N_S_gpio_601010_P_status_STRING_TOKEN disabled
#define DT_N_S_gpio_601010_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_gpio_601010_P_status_IDX_0 "disabled"
#define DT_N_S_gpio_601010_P_status_IDX_0_EXISTS 1
#define DT_N_S_gpio_601010_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_gpio_601010_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_gpio_601010_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_601010, status, 0)
#define DT_N_S_gpio_601010_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_601010, status, 0)
#define DT_N_S_gpio_601010_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_601010, status, 0, __VA_ARGS__)
#define DT_N_S_gpio_601010_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_601010, status, 0, __VA_ARGS__)
#define DT_N_S_gpio_601010_P_status_LEN 1
#define DT_N_S_gpio_601010_P_status_EXISTS 1
#define DT_N_S_gpio_601010_P_compatible {"ti,davinci-gpio"}
#define DT_N_S_gpio_601010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_601010_P_compatible_IDX_0 "ti,davinci-gpio"
#define DT_N_S_gpio_601010_P_compatible_IDX_0_STRING_UNQUOTED ti,davinci-gpio
#define DT_N_S_gpio_601010_P_compatible_IDX_0_STRING_TOKEN ti_davinci_gpio
#define DT_N_S_gpio_601010_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_DAVINCI_GPIO
#define DT_N_S_gpio_601010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_601010, compatible, 0)
#define DT_N_S_gpio_601010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_601010, compatible, 0)
#define DT_N_S_gpio_601010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_601010, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_601010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_601010, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_601010_P_compatible_LEN 1
#define DT_N_S_gpio_601010_P_compatible_EXISTS 1
#define DT_N_S_gpio_601010_P_zephyr_deferred_init 0
#define DT_N_S_gpio_601010_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_gpio_601010_P_wakeup_source 0
#define DT_N_S_gpio_601010_P_wakeup_source_EXISTS 1
#define DT_N_S_gpio_601010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_gpio_601010_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_gpio_601010_P_gpio_controller 1
#define DT_N_S_gpio_601010_P_gpio_controller_EXISTS 1
#define DT_N_S_gpio_601010_P_ngpios 52
#define DT_N_S_gpio_601010_P_ngpios_EXISTS 1

/*
 * Devicetree node: /memory@0
 *
 * Node identifier: DT_N_S_memory_0
 *
 * Binding (compatible = zephyr,memory-region):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_0_PATH "/memory@0"

/* Node's name with unit-address: */
#define DT_N_S_memory_0_FULL_NAME "memory@0"
#define DT_N_S_memory_0_FULL_NAME_UNQUOTED memory@0
#define DT_N_S_memory_0_FULL_NAME_TOKEN memory_0
#define DT_N_S_memory_0_FULL_NAME_UPPER_TOKEN MEMORY_0

/* Node parent (/) identifier: */
#define DT_N_S_memory_0_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_0_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_memory_0_NODELABEL_NUM 1
#define DT_N_S_memory_0_FOREACH_NODELABEL(fn) fn(atcm)
#define DT_N_S_memory_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(atcm, __VA_ARGS__)
#define DT_N_S_memory_0_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory_0_CHILD_NUM 0
#define DT_N_S_memory_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_memory_0_FOREACH_CHILD(fn) 
#define DT_N_S_memory_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_memory_0_HASH 9y_g6efAFMFJHpvX5LvqTWyC5DlDdpWvtXC7_n8KZJA

/* Node's dependency ordinal: */
#define DT_N_S_memory_0_ORD 5
#define DT_N_S_memory_0_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_0_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_0_EXISTS 1
#define DT_N_INST_0_zephyr_memory_region DT_N_S_memory_0
#define DT_N_INST_0_mmio_sram            DT_N_S_memory_0
#define DT_N_NODELABEL_atcm              DT_N_S_memory_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_0_REG_NUM 1
#define DT_N_S_memory_0_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_memory_0_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_memory_0_RANGES_NUM 0
#define DT_N_S_memory_0_FOREACH_RANGE(fn) 
#define DT_N_S_memory_0_IRQ_NUM 0
#define DT_N_S_memory_0_IRQ_LEVEL 0
#define DT_N_S_memory_0_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_memory_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_memory_0_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_memory_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_memory_0_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_memory_0_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_0_P_zephyr_memory_region "ATCM"
#define DT_N_S_memory_0_P_zephyr_memory_region_STRING_UNQUOTED ATCM
#define DT_N_S_memory_0_P_zephyr_memory_region_STRING_TOKEN ATCM
#define DT_N_S_memory_0_P_zephyr_memory_region_STRING_UPPER_TOKEN ATCM
#define DT_N_S_memory_0_P_zephyr_memory_region_IDX_0 "ATCM"
#define DT_N_S_memory_0_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_memory_0_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_0, zephyr_memory_region, 0)
#define DT_N_S_memory_0_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_0, zephyr_memory_region, 0)
#define DT_N_S_memory_0_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_0, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_memory_0_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_0, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_memory_0_P_zephyr_memory_region_LEN 1
#define DT_N_S_memory_0_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_memory_0_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_memory_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_0_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_memory_0_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_memory_0_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_memory_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_memory_0_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_memory_0_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_memory_0_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_memory_0_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_memory_0_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_0, compatible, 0) \
	fn(DT_N_S_memory_0, compatible, 1)
#define DT_N_S_memory_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_0, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_memory_0, compatible, 1)
#define DT_N_S_memory_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_0, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_0, compatible, 1, __VA_ARGS__)
#define DT_N_S_memory_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_0, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_memory_0, compatible, 1, __VA_ARGS__)
#define DT_N_S_memory_0_P_compatible_LEN 2
#define DT_N_S_memory_0_P_compatible_EXISTS 1
#define DT_N_S_memory_0_P_reg {0 /* 0x0 */, 32768 /* 0x8000 */}
#define DT_N_S_memory_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_0_P_reg_IDX_0 0
#define DT_N_S_memory_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_0_P_reg_IDX_1 32768
#define DT_N_S_memory_0_P_reg_EXISTS 1
#define DT_N_S_memory_0_P_zephyr_deferred_init 0
#define DT_N_S_memory_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_memory_0_P_wakeup_source 0
#define DT_N_S_memory_0_P_wakeup_source_EXISTS 1
#define DT_N_S_memory_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /memory@41010000
 *
 * Node identifier: DT_N_S_memory_41010000
 *
 * Binding (compatible = zephyr,memory-region):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_41010000_PATH "/memory@41010000"

/* Node's name with unit-address: */
#define DT_N_S_memory_41010000_FULL_NAME "memory@41010000"
#define DT_N_S_memory_41010000_FULL_NAME_UNQUOTED memory@41010000
#define DT_N_S_memory_41010000_FULL_NAME_TOKEN memory_41010000
#define DT_N_S_memory_41010000_FULL_NAME_UPPER_TOKEN MEMORY_41010000

/* Node parent (/) identifier: */
#define DT_N_S_memory_41010000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_41010000_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_memory_41010000_NODELABEL_NUM 1
#define DT_N_S_memory_41010000_FOREACH_NODELABEL(fn) fn(btcm)
#define DT_N_S_memory_41010000_FOREACH_NODELABEL_VARGS(fn, ...) fn(btcm, __VA_ARGS__)
#define DT_N_S_memory_41010000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory_41010000_CHILD_NUM 0
#define DT_N_S_memory_41010000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_memory_41010000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_41010000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory_41010000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_41010000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory_41010000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_41010000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory_41010000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory_41010000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_memory_41010000_HASH Ez6avDpW3mb4TU_wvn5OLAz7YROjocF_a9L__y5fXGA

/* Node's dependency ordinal: */
#define DT_N_S_memory_41010000_ORD 6
#define DT_N_S_memory_41010000_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_41010000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_41010000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_41010000_EXISTS 1
#define DT_N_INST_1_zephyr_memory_region DT_N_S_memory_41010000
#define DT_N_INST_1_mmio_sram            DT_N_S_memory_41010000
#define DT_N_NODELABEL_btcm              DT_N_S_memory_41010000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_41010000_REG_NUM 1
#define DT_N_S_memory_41010000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_41010000_REG_IDX_0_VAL_ADDRESS 1090584576 /* 0x41010000 */
#define DT_N_S_memory_41010000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_memory_41010000_RANGES_NUM 0
#define DT_N_S_memory_41010000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_41010000_IRQ_NUM 0
#define DT_N_S_memory_41010000_IRQ_LEVEL 0
#define DT_N_S_memory_41010000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_memory_41010000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_memory_41010000_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_memory_41010000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_memory_41010000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_memory_41010000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_41010000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_41010000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_41010000_P_zephyr_memory_region "BTCM"
#define DT_N_S_memory_41010000_P_zephyr_memory_region_STRING_UNQUOTED BTCM
#define DT_N_S_memory_41010000_P_zephyr_memory_region_STRING_TOKEN BTCM
#define DT_N_S_memory_41010000_P_zephyr_memory_region_STRING_UPPER_TOKEN BTCM
#define DT_N_S_memory_41010000_P_zephyr_memory_region_IDX_0 "BTCM"
#define DT_N_S_memory_41010000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_memory_41010000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_41010000, zephyr_memory_region, 0)
#define DT_N_S_memory_41010000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_41010000, zephyr_memory_region, 0)
#define DT_N_S_memory_41010000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_41010000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_memory_41010000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_41010000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_memory_41010000_P_zephyr_memory_region_LEN 1
#define DT_N_S_memory_41010000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_memory_41010000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_memory_41010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_41010000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_memory_41010000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_memory_41010000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_memory_41010000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_memory_41010000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_memory_41010000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_memory_41010000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_memory_41010000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_memory_41010000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory_41010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_41010000, compatible, 0) \
	fn(DT_N_S_memory_41010000, compatible, 1)
#define DT_N_S_memory_41010000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_41010000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_memory_41010000, compatible, 1)
#define DT_N_S_memory_41010000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_41010000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_41010000, compatible, 1, __VA_ARGS__)
#define DT_N_S_memory_41010000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_41010000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_memory_41010000, compatible, 1, __VA_ARGS__)
#define DT_N_S_memory_41010000_P_compatible_LEN 2
#define DT_N_S_memory_41010000_P_compatible_EXISTS 1
#define DT_N_S_memory_41010000_P_reg {1090584576 /* 0x41010000 */, 32768 /* 0x8000 */}
#define DT_N_S_memory_41010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_41010000_P_reg_IDX_0 1090584576
#define DT_N_S_memory_41010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_41010000_P_reg_IDX_1 32768
#define DT_N_S_memory_41010000_P_reg_EXISTS 1
#define DT_N_S_memory_41010000_P_zephyr_deferred_init 0
#define DT_N_S_memory_41010000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_memory_41010000_P_wakeup_source 0
#define DT_N_S_memory_41010000_P_wakeup_source_EXISTS 1
#define DT_N_S_memory_41010000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory_41010000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /memory@a1000000
 *
 * Node identifier: DT_N_S_memory_a1000000
 *
 * Binding (compatible = mmio-sram):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_a1000000_PATH "/memory@a1000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_a1000000_FULL_NAME "memory@a1000000"
#define DT_N_S_memory_a1000000_FULL_NAME_UNQUOTED memory@a1000000
#define DT_N_S_memory_a1000000_FULL_NAME_TOKEN memory_a1000000
#define DT_N_S_memory_a1000000_FULL_NAME_UPPER_TOKEN MEMORY_A1000000

/* Node parent (/) identifier: */
#define DT_N_S_memory_a1000000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_a1000000_CHILD_IDX 20

/* Helpers for dealing with node labels: */
#define DT_N_S_memory_a1000000_NODELABEL_NUM 1
#define DT_N_S_memory_a1000000_FOREACH_NODELABEL(fn) fn(ddr0)
#define DT_N_S_memory_a1000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(ddr0, __VA_ARGS__)
#define DT_N_S_memory_a1000000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory_a1000000_CHILD_NUM 0
#define DT_N_S_memory_a1000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_memory_a1000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_a1000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory_a1000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_a1000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory_a1000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_a1000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory_a1000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory_a1000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_memory_a1000000_HASH 3xkgxK_lXfLjmetMChO7ZTt_AGHMZjYhaq3KPRz1DQc

/* Node's dependency ordinal: */
#define DT_N_S_memory_a1000000_ORD 7
#define DT_N_S_memory_a1000000_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_a1000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_a1000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_a1000000_EXISTS 1
#define DT_N_INST_2_mmio_sram DT_N_S_memory_a1000000
#define DT_N_NODELABEL_ddr0   DT_N_S_memory_a1000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_a1000000_REG_NUM 1
#define DT_N_S_memory_a1000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_a1000000_REG_IDX_0_VAL_ADDRESS 2701131776 /* 0xa1000000 */
#define DT_N_S_memory_a1000000_REG_IDX_0_VAL_SIZE 1048576 /* 0x100000 */
#define DT_N_S_memory_a1000000_RANGES_NUM 0
#define DT_N_S_memory_a1000000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_a1000000_IRQ_NUM 0
#define DT_N_S_memory_a1000000_IRQ_LEVEL 0
#define DT_N_S_memory_a1000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_a1000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_a1000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_a1000000_P_reg {2701131776 /* 0xa1000000 */, 1048576 /* 0x100000 */}
#define DT_N_S_memory_a1000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_a1000000_P_reg_IDX_0 2701131776
#define DT_N_S_memory_a1000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_a1000000_P_reg_IDX_1 1048576
#define DT_N_S_memory_a1000000_P_reg_EXISTS 1
#define DT_N_S_memory_a1000000_P_compatible {"mmio-sram"}
#define DT_N_S_memory_a1000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_a1000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory_a1000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_memory_a1000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_memory_a1000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory_a1000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_a1000000, compatible, 0)
#define DT_N_S_memory_a1000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_a1000000, compatible, 0)
#define DT_N_S_memory_a1000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_a1000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_a1000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_a1000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_a1000000_P_compatible_LEN 1
#define DT_N_S_memory_a1000000_P_compatible_EXISTS 1
#define DT_N_S_memory_a1000000_P_zephyr_deferred_init 0
#define DT_N_S_memory_a1000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_memory_a1000000_P_wakeup_source 0
#define DT_N_S_memory_a1000000_P_wakeup_source_EXISTS 1
#define DT_N_S_memory_a1000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory_a1000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /memory@a1100000
 *
 * Node identifier: DT_N_S_memory_a1100000
 *
 * Binding (compatible = zephyr,memory-region):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_a1100000_PATH "/memory@a1100000"

/* Node's name with unit-address: */
#define DT_N_S_memory_a1100000_FULL_NAME "memory@a1100000"
#define DT_N_S_memory_a1100000_FULL_NAME_UNQUOTED memory@a1100000
#define DT_N_S_memory_a1100000_FULL_NAME_TOKEN memory_a1100000
#define DT_N_S_memory_a1100000_FULL_NAME_UPPER_TOKEN MEMORY_A1100000

/* Node parent (/) identifier: */
#define DT_N_S_memory_a1100000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_a1100000_CHILD_IDX 21

/* Helpers for dealing with node labels: */
#define DT_N_S_memory_a1100000_NODELABEL_NUM 1
#define DT_N_S_memory_a1100000_FOREACH_NODELABEL(fn) fn(rsc_table)
#define DT_N_S_memory_a1100000_FOREACH_NODELABEL_VARGS(fn, ...) fn(rsc_table, __VA_ARGS__)
#define DT_N_S_memory_a1100000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory_a1100000_CHILD_NUM 0
#define DT_N_S_memory_a1100000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_memory_a1100000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_a1100000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory_a1100000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_a1100000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory_a1100000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_a1100000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory_a1100000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory_a1100000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_memory_a1100000_HASH _s_gElbhhdq6R2Hq1ZVI_6VBCvNTfqm0y7_dpT9BeVs

/* Node's dependency ordinal: */
#define DT_N_S_memory_a1100000_ORD 8
#define DT_N_S_memory_a1100000_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_a1100000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_a1100000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_a1100000_EXISTS 1
#define DT_N_INST_2_zephyr_memory_region DT_N_S_memory_a1100000
#define DT_N_INST_3_mmio_sram            DT_N_S_memory_a1100000
#define DT_N_NODELABEL_rsc_table         DT_N_S_memory_a1100000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_a1100000_REG_NUM 1
#define DT_N_S_memory_a1100000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_a1100000_REG_IDX_0_VAL_ADDRESS 2702180352 /* 0xa1100000 */
#define DT_N_S_memory_a1100000_REG_IDX_0_VAL_SIZE 1048576 /* 0x100000 */
#define DT_N_S_memory_a1100000_RANGES_NUM 0
#define DT_N_S_memory_a1100000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_a1100000_IRQ_NUM 0
#define DT_N_S_memory_a1100000_IRQ_LEVEL 0
#define DT_N_S_memory_a1100000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_memory_a1100000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_memory_a1100000_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_memory_a1100000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_memory_a1100000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_memory_a1100000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_a1100000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_a1100000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_a1100000_P_zephyr_memory_region "RSC_TABLE"
#define DT_N_S_memory_a1100000_P_zephyr_memory_region_STRING_UNQUOTED RSC_TABLE
#define DT_N_S_memory_a1100000_P_zephyr_memory_region_STRING_TOKEN RSC_TABLE
#define DT_N_S_memory_a1100000_P_zephyr_memory_region_STRING_UPPER_TOKEN RSC_TABLE
#define DT_N_S_memory_a1100000_P_zephyr_memory_region_IDX_0 "RSC_TABLE"
#define DT_N_S_memory_a1100000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_memory_a1100000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_a1100000, zephyr_memory_region, 0)
#define DT_N_S_memory_a1100000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_a1100000, zephyr_memory_region, 0)
#define DT_N_S_memory_a1100000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_a1100000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_memory_a1100000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_a1100000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_memory_a1100000_P_zephyr_memory_region_LEN 1
#define DT_N_S_memory_a1100000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_memory_a1100000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_memory_a1100000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_a1100000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_memory_a1100000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_memory_a1100000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_memory_a1100000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_memory_a1100000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_memory_a1100000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_memory_a1100000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_memory_a1100000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_memory_a1100000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory_a1100000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_a1100000, compatible, 0) \
	fn(DT_N_S_memory_a1100000, compatible, 1)
#define DT_N_S_memory_a1100000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_a1100000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_memory_a1100000, compatible, 1)
#define DT_N_S_memory_a1100000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_a1100000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_a1100000, compatible, 1, __VA_ARGS__)
#define DT_N_S_memory_a1100000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_a1100000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_memory_a1100000, compatible, 1, __VA_ARGS__)
#define DT_N_S_memory_a1100000_P_compatible_LEN 2
#define DT_N_S_memory_a1100000_P_compatible_EXISTS 1
#define DT_N_S_memory_a1100000_P_reg {2702180352 /* 0xa1100000 */, 1048576 /* 0x100000 */}
#define DT_N_S_memory_a1100000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_a1100000_P_reg_IDX_0 2702180352
#define DT_N_S_memory_a1100000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_a1100000_P_reg_IDX_1 1048576
#define DT_N_S_memory_a1100000_P_reg_EXISTS 1
#define DT_N_S_memory_a1100000_P_zephyr_deferred_init 0
#define DT_N_S_memory_a1100000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_memory_a1100000_P_wakeup_source 0
#define DT_N_S_memory_a1100000_P_wakeup_source_EXISTS 1
#define DT_N_S_memory_a1100000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory_a1100000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /memory@a1200000
 *
 * Node identifier: DT_N_S_memory_a1200000
 *
 * Binding (compatible = zephyr,memory-region):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_a1200000_PATH "/memory@a1200000"

/* Node's name with unit-address: */
#define DT_N_S_memory_a1200000_FULL_NAME "memory@a1200000"
#define DT_N_S_memory_a1200000_FULL_NAME_UNQUOTED memory@a1200000
#define DT_N_S_memory_a1200000_FULL_NAME_TOKEN memory_a1200000
#define DT_N_S_memory_a1200000_FULL_NAME_UPPER_TOKEN MEMORY_A1200000

/* Node parent (/) identifier: */
#define DT_N_S_memory_a1200000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_a1200000_CHILD_IDX 22

/* Helpers for dealing with node labels: */
#define DT_N_S_memory_a1200000_NODELABEL_NUM 1
#define DT_N_S_memory_a1200000_FOREACH_NODELABEL(fn) fn(ddr1)
#define DT_N_S_memory_a1200000_FOREACH_NODELABEL_VARGS(fn, ...) fn(ddr1, __VA_ARGS__)
#define DT_N_S_memory_a1200000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory_a1200000_CHILD_NUM 0
#define DT_N_S_memory_a1200000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_memory_a1200000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_a1200000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory_a1200000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_a1200000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory_a1200000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_a1200000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory_a1200000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory_a1200000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_memory_a1200000_HASH Bw9bO7qOx_0CAu_1vnDa_3hmyF1QhmKZczySpf6qY7g

/* Node's dependency ordinal: */
#define DT_N_S_memory_a1200000_ORD 9
#define DT_N_S_memory_a1200000_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_a1200000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_a1200000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_a1200000_EXISTS 1
#define DT_N_INST_3_zephyr_memory_region DT_N_S_memory_a1200000
#define DT_N_INST_4_mmio_sram            DT_N_S_memory_a1200000
#define DT_N_NODELABEL_ddr1              DT_N_S_memory_a1200000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_a1200000_REG_NUM 1
#define DT_N_S_memory_a1200000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_a1200000_REG_IDX_0_VAL_ADDRESS 2703228928 /* 0xa1200000 */
#define DT_N_S_memory_a1200000_REG_IDX_0_VAL_SIZE 14680064 /* 0xe00000 */
#define DT_N_S_memory_a1200000_RANGES_NUM 0
#define DT_N_S_memory_a1200000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_a1200000_IRQ_NUM 0
#define DT_N_S_memory_a1200000_IRQ_LEVEL 0
#define DT_N_S_memory_a1200000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_memory_a1200000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_memory_a1200000_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_memory_a1200000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_memory_a1200000_COMPAT_MODEL_IDX_0 "memory-region"
#define DT_N_S_memory_a1200000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_a1200000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_a1200000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_a1200000_P_zephyr_memory_region "DRAM"
#define DT_N_S_memory_a1200000_P_zephyr_memory_region_STRING_UNQUOTED DRAM
#define DT_N_S_memory_a1200000_P_zephyr_memory_region_STRING_TOKEN DRAM
#define DT_N_S_memory_a1200000_P_zephyr_memory_region_STRING_UPPER_TOKEN DRAM
#define DT_N_S_memory_a1200000_P_zephyr_memory_region_IDX_0 "DRAM"
#define DT_N_S_memory_a1200000_P_zephyr_memory_region_IDX_0_EXISTS 1
#define DT_N_S_memory_a1200000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_a1200000, zephyr_memory_region, 0)
#define DT_N_S_memory_a1200000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_a1200000, zephyr_memory_region, 0)
#define DT_N_S_memory_a1200000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_a1200000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_memory_a1200000_P_zephyr_memory_region_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_a1200000, zephyr_memory_region, 0, __VA_ARGS__)
#define DT_N_S_memory_a1200000_P_zephyr_memory_region_LEN 1
#define DT_N_S_memory_a1200000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_memory_a1200000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_memory_a1200000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_a1200000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_memory_a1200000_P_compatible_IDX_0_STRING_UNQUOTED zephyr,memory-region
#define DT_N_S_memory_a1200000_P_compatible_IDX_0_STRING_TOKEN zephyr_memory_region
#define DT_N_S_memory_a1200000_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_MEMORY_REGION
#define DT_N_S_memory_a1200000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_memory_a1200000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_memory_a1200000_P_compatible_IDX_1_STRING_UNQUOTED mmio-sram
#define DT_N_S_memory_a1200000_P_compatible_IDX_1_STRING_TOKEN mmio_sram
#define DT_N_S_memory_a1200000_P_compatible_IDX_1_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory_a1200000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_a1200000, compatible, 0) \
	fn(DT_N_S_memory_a1200000, compatible, 1)
#define DT_N_S_memory_a1200000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_a1200000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_memory_a1200000, compatible, 1)
#define DT_N_S_memory_a1200000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_a1200000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_a1200000, compatible, 1, __VA_ARGS__)
#define DT_N_S_memory_a1200000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_a1200000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_memory_a1200000, compatible, 1, __VA_ARGS__)
#define DT_N_S_memory_a1200000_P_compatible_LEN 2
#define DT_N_S_memory_a1200000_P_compatible_EXISTS 1
#define DT_N_S_memory_a1200000_P_reg {2703228928 /* 0xa1200000 */, 14680064 /* 0xe00000 */}
#define DT_N_S_memory_a1200000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_a1200000_P_reg_IDX_0 2703228928
#define DT_N_S_memory_a1200000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_a1200000_P_reg_IDX_1 14680064
#define DT_N_S_memory_a1200000_P_reg_EXISTS 1
#define DT_N_S_memory_a1200000_P_zephyr_deferred_init 0
#define DT_N_S_memory_a1200000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_memory_a1200000_P_wakeup_source 0
#define DT_N_S_memory_a1200000_P_wakeup_source_EXISTS 1
#define DT_N_S_memory_a1200000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory_a1200000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"
#define DT_N_S_soc_FULL_NAME_UNQUOTED soc
#define DT_N_S_soc_FULL_NAME_TOKEN soc
#define DT_N_S_soc_FULL_NAME_UPPER_TOKEN SOC

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_NODELABEL_NUM 0
#define DT_N_S_soc_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_CHILD_NUM 0
#define DT_N_S_soc_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_FOREACH_CHILD(fn) 
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_soc_HASH DcVqqq9YzG86l3_Hk7pNncUh2rnHG8USjbVY6wBdFts

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 10
#define DT_N_S_soc_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_IRQ_LEVEL 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /interrupt-controller@7ff0000
 *
 * Node identifier: DT_N_S_interrupt_controller_7ff0000
 *
 * Binding (compatible = ti,vim):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/interrupt-controller/ti,vim.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_interrupt_controller_7ff0000_PATH "/interrupt-controller@7ff0000"

/* Node's name with unit-address: */
#define DT_N_S_interrupt_controller_7ff0000_FULL_NAME "interrupt-controller@7ff0000"
#define DT_N_S_interrupt_controller_7ff0000_FULL_NAME_UNQUOTED interrupt-controller@7ff0000
#define DT_N_S_interrupt_controller_7ff0000_FULL_NAME_TOKEN interrupt_controller_7ff0000
#define DT_N_S_interrupt_controller_7ff0000_FULL_NAME_UPPER_TOKEN INTERRUPT_CONTROLLER_7FF0000

/* Node parent (/) identifier: */
#define DT_N_S_interrupt_controller_7ff0000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_interrupt_controller_7ff0000_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_interrupt_controller_7ff0000_NODELABEL_NUM 1
#define DT_N_S_interrupt_controller_7ff0000_FOREACH_NODELABEL(fn) fn(vim)
#define DT_N_S_interrupt_controller_7ff0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(vim, __VA_ARGS__)
#define DT_N_S_interrupt_controller_7ff0000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_interrupt_controller_7ff0000_CHILD_NUM 0
#define DT_N_S_interrupt_controller_7ff0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_interrupt_controller_7ff0000_FOREACH_CHILD(fn) 
#define DT_N_S_interrupt_controller_7ff0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_interrupt_controller_7ff0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_interrupt_controller_7ff0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_interrupt_controller_7ff0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_interrupt_controller_7ff0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_interrupt_controller_7ff0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_interrupt_controller_7ff0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_interrupt_controller_7ff0000_HASH k_AOph2sNxJ65h3sI_xde1Y3mt8uRkDugbF0KymKnGg

/* Node's dependency ordinal: */
#define DT_N_S_interrupt_controller_7ff0000_ORD 11
#define DT_N_S_interrupt_controller_7ff0000_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_interrupt_controller_7ff0000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_interrupt_controller_7ff0000_SUPPORTS_ORDS \
	12, /* /timer@4800000 */ \
	13, /* /uart@2800000 */ \
	17, /* /uart@2810000 */ \
	18, /* /uart@2820000 */ \
	19, /* /uart@2830000 */ \
	20, /* /uart@2840000 */ \
	21, /* /uart@2850000 */ \
	22, /* /uart@2860000 */ \
	23, /* /uart@4a00000 */

/* Existence and alternate IDs: */
#define DT_N_S_interrupt_controller_7ff0000_EXISTS 1
#define DT_N_INST_0_ti_vim DT_N_S_interrupt_controller_7ff0000
#define DT_N_NODELABEL_vim DT_N_S_interrupt_controller_7ff0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_interrupt_controller_7ff0000_REG_NUM 1
#define DT_N_S_interrupt_controller_7ff0000_REG_IDX_0_EXISTS 1
#define DT_N_S_interrupt_controller_7ff0000_REG_IDX_0_VAL_ADDRESS 134152192 /* 0x7ff0000 */
#define DT_N_S_interrupt_controller_7ff0000_REG_IDX_0_VAL_SIZE 10240 /* 0x2800 */
#define DT_N_S_interrupt_controller_7ff0000_RANGES_NUM 0
#define DT_N_S_interrupt_controller_7ff0000_FOREACH_RANGE(fn) 
#define DT_N_S_interrupt_controller_7ff0000_IRQ_NUM 0
#define DT_N_S_interrupt_controller_7ff0000_IRQ_LEVEL 0
#define DT_N_S_interrupt_controller_7ff0000_COMPAT_MATCHES_ti_vim 1
#define DT_N_S_interrupt_controller_7ff0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_interrupt_controller_7ff0000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_interrupt_controller_7ff0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_interrupt_controller_7ff0000_COMPAT_MODEL_IDX_0 "vim"
#define DT_N_S_interrupt_controller_7ff0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_interrupt_controller_7ff0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_interrupt_controller_7ff0000_P_reg {134152192 /* 0x7ff0000 */, 10240 /* 0x2800 */}
#define DT_N_S_interrupt_controller_7ff0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_interrupt_controller_7ff0000_P_reg_IDX_0 134152192
#define DT_N_S_interrupt_controller_7ff0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_interrupt_controller_7ff0000_P_reg_IDX_1 10240
#define DT_N_S_interrupt_controller_7ff0000_P_reg_EXISTS 1
#define DT_N_S_interrupt_controller_7ff0000_P_status "okay"
#define DT_N_S_interrupt_controller_7ff0000_P_status_STRING_UNQUOTED okay
#define DT_N_S_interrupt_controller_7ff0000_P_status_STRING_TOKEN okay
#define DT_N_S_interrupt_controller_7ff0000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_interrupt_controller_7ff0000_P_status_IDX_0 "okay"
#define DT_N_S_interrupt_controller_7ff0000_P_status_IDX_0_EXISTS 1
#define DT_N_S_interrupt_controller_7ff0000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_interrupt_controller_7ff0000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_interrupt_controller_7ff0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_interrupt_controller_7ff0000, status, 0)
#define DT_N_S_interrupt_controller_7ff0000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_interrupt_controller_7ff0000, status, 0)
#define DT_N_S_interrupt_controller_7ff0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_interrupt_controller_7ff0000, status, 0, __VA_ARGS__)
#define DT_N_S_interrupt_controller_7ff0000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_interrupt_controller_7ff0000, status, 0, __VA_ARGS__)
#define DT_N_S_interrupt_controller_7ff0000_P_status_LEN 1
#define DT_N_S_interrupt_controller_7ff0000_P_status_EXISTS 1
#define DT_N_S_interrupt_controller_7ff0000_P_compatible {"ti,vim"}
#define DT_N_S_interrupt_controller_7ff0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_interrupt_controller_7ff0000_P_compatible_IDX_0 "ti,vim"
#define DT_N_S_interrupt_controller_7ff0000_P_compatible_IDX_0_STRING_UNQUOTED ti,vim
#define DT_N_S_interrupt_controller_7ff0000_P_compatible_IDX_0_STRING_TOKEN ti_vim
#define DT_N_S_interrupt_controller_7ff0000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_VIM
#define DT_N_S_interrupt_controller_7ff0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_interrupt_controller_7ff0000, compatible, 0)
#define DT_N_S_interrupt_controller_7ff0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_interrupt_controller_7ff0000, compatible, 0)
#define DT_N_S_interrupt_controller_7ff0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_interrupt_controller_7ff0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_interrupt_controller_7ff0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_interrupt_controller_7ff0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_interrupt_controller_7ff0000_P_compatible_LEN 1
#define DT_N_S_interrupt_controller_7ff0000_P_compatible_EXISTS 1
#define DT_N_S_interrupt_controller_7ff0000_P_zephyr_deferred_init 0
#define DT_N_S_interrupt_controller_7ff0000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_interrupt_controller_7ff0000_P_wakeup_source 0
#define DT_N_S_interrupt_controller_7ff0000_P_wakeup_source_EXISTS 1
#define DT_N_S_interrupt_controller_7ff0000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_interrupt_controller_7ff0000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /timer@4800000
 *
 * Node identifier: DT_N_S_timer_4800000
 *
 * Binding (compatible = ti,am654-timer):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/timer/ti,am654-dmtimer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_timer_4800000_PATH "/timer@4800000"

/* Node's name with unit-address: */
#define DT_N_S_timer_4800000_FULL_NAME "timer@4800000"
#define DT_N_S_timer_4800000_FULL_NAME_UNQUOTED timer@4800000
#define DT_N_S_timer_4800000_FULL_NAME_TOKEN timer_4800000
#define DT_N_S_timer_4800000_FULL_NAME_UPPER_TOKEN TIMER_4800000

/* Node parent (/) identifier: */
#define DT_N_S_timer_4800000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_timer_4800000_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_timer_4800000_NODELABEL_NUM 1
#define DT_N_S_timer_4800000_FOREACH_NODELABEL(fn) fn(systick_timer)
#define DT_N_S_timer_4800000_FOREACH_NODELABEL_VARGS(fn, ...) fn(systick_timer, __VA_ARGS__)
#define DT_N_S_timer_4800000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_timer_4800000_CHILD_NUM 0
#define DT_N_S_timer_4800000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_timer_4800000_FOREACH_CHILD(fn) 
#define DT_N_S_timer_4800000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_timer_4800000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_timer_4800000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_timer_4800000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_timer_4800000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_timer_4800000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_timer_4800000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_timer_4800000_HASH ZlOkZVm5Hh3Z6AHJ4SDw7V96xxPQtVwesYTOPzIy98c

/* Node's dependency ordinal: */
#define DT_N_S_timer_4800000_ORD 12
#define DT_N_S_timer_4800000_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_timer_4800000_REQUIRES_ORDS \
	0, /* / */ \
	11, /* /interrupt-controller@7ff0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_timer_4800000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_timer_4800000_EXISTS 1
#define DT_N_INST_0_ti_am654_timer   DT_N_S_timer_4800000
#define DT_N_NODELABEL_systick_timer DT_N_S_timer_4800000

/* Macros for properties that are special in the specification: */
#define DT_N_S_timer_4800000_REG_NUM 1
#define DT_N_S_timer_4800000_REG_IDX_0_EXISTS 1
#define DT_N_S_timer_4800000_REG_IDX_0_VAL_ADDRESS 75497472 /* 0x4800000 */
#define DT_N_S_timer_4800000_REG_IDX_0_VAL_SIZE 112 /* 0x70 */
#define DT_N_S_timer_4800000_RANGES_NUM 0
#define DT_N_S_timer_4800000_FOREACH_RANGE(fn) 
#define DT_N_S_timer_4800000_IRQ_NUM 1
#define DT_N_S_timer_4800000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_timer_4800000_IRQ_IDX_0_VAL_type 0
#define DT_N_S_timer_4800000_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_timer_4800000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_timer_4800000_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_timer_4800000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_timer_4800000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_timer_4800000_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_timer_4800000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_timer_4800000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_timer_4800000_IRQ_IDX_0_VAL_priority 15
#define DT_N_S_timer_4800000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_timer_4800000_IRQ_IDX_0_CONTROLLER DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_timer_4800000_IRQ_LEVEL 1
#define DT_N_S_timer_4800000_COMPAT_MATCHES_ti_am654_timer 1
#define DT_N_S_timer_4800000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_timer_4800000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_timer_4800000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_timer_4800000_COMPAT_MODEL_IDX_0 "am654-timer"
#define DT_N_S_timer_4800000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_timer_4800000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_timer_4800000_P_reg {75497472 /* 0x4800000 */, 112 /* 0x70 */}
#define DT_N_S_timer_4800000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_timer_4800000_P_reg_IDX_0 75497472
#define DT_N_S_timer_4800000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_timer_4800000_P_reg_IDX_1 112
#define DT_N_S_timer_4800000_P_reg_EXISTS 1
#define DT_N_S_timer_4800000_P_interrupts {0 /* 0x0 */, 28 /* 0x1c */, 2 /* 0x2 */, 15 /* 0xf */}
#define DT_N_S_timer_4800000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_timer_4800000_P_interrupts_IDX_0 0
#define DT_N_S_timer_4800000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_timer_4800000_P_interrupts_IDX_1 28
#define DT_N_S_timer_4800000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_timer_4800000_P_interrupts_IDX_2 2
#define DT_N_S_timer_4800000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_timer_4800000_P_interrupts_IDX_3 15
#define DT_N_S_timer_4800000_P_interrupts_EXISTS 1
#define DT_N_S_timer_4800000_P_status "okay"
#define DT_N_S_timer_4800000_P_status_STRING_UNQUOTED okay
#define DT_N_S_timer_4800000_P_status_STRING_TOKEN okay
#define DT_N_S_timer_4800000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_timer_4800000_P_status_IDX_0 "okay"
#define DT_N_S_timer_4800000_P_status_IDX_0_EXISTS 1
#define DT_N_S_timer_4800000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_timer_4800000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_timer_4800000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_timer_4800000, status, 0)
#define DT_N_S_timer_4800000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_timer_4800000, status, 0)
#define DT_N_S_timer_4800000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_timer_4800000, status, 0, __VA_ARGS__)
#define DT_N_S_timer_4800000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_timer_4800000, status, 0, __VA_ARGS__)
#define DT_N_S_timer_4800000_P_status_LEN 1
#define DT_N_S_timer_4800000_P_status_EXISTS 1
#define DT_N_S_timer_4800000_P_compatible {"ti,am654-timer"}
#define DT_N_S_timer_4800000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_timer_4800000_P_compatible_IDX_0 "ti,am654-timer"
#define DT_N_S_timer_4800000_P_compatible_IDX_0_STRING_UNQUOTED ti,am654-timer
#define DT_N_S_timer_4800000_P_compatible_IDX_0_STRING_TOKEN ti_am654_timer
#define DT_N_S_timer_4800000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_AM654_TIMER
#define DT_N_S_timer_4800000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_timer_4800000, compatible, 0)
#define DT_N_S_timer_4800000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_timer_4800000, compatible, 0)
#define DT_N_S_timer_4800000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_timer_4800000, compatible, 0, __VA_ARGS__)
#define DT_N_S_timer_4800000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_timer_4800000, compatible, 0, __VA_ARGS__)
#define DT_N_S_timer_4800000_P_compatible_LEN 1
#define DT_N_S_timer_4800000_P_compatible_EXISTS 1
#define DT_N_S_timer_4800000_P_interrupt_parent DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_timer_4800000_P_interrupt_parent_IDX_0 DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_timer_4800000_P_interrupt_parent_IDX_0_PH DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_timer_4800000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_timer_4800000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_timer_4800000, interrupt_parent, 0)
#define DT_N_S_timer_4800000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_timer_4800000, interrupt_parent, 0)
#define DT_N_S_timer_4800000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_timer_4800000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_timer_4800000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_timer_4800000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_timer_4800000_P_interrupt_parent_LEN 1
#define DT_N_S_timer_4800000_P_interrupt_parent_EXISTS 1
#define DT_N_S_timer_4800000_P_zephyr_deferred_init 0
#define DT_N_S_timer_4800000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_timer_4800000_P_wakeup_source 0
#define DT_N_S_timer_4800000_P_wakeup_source_EXISTS 1
#define DT_N_S_timer_4800000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_timer_4800000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /uart@2800000
 *
 * Node identifier: DT_N_S_uart_2800000
 *
 * Binding (compatible = ns16550):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/serial/ns16550.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_uart_2800000_PATH "/uart@2800000"

/* Node's name with unit-address: */
#define DT_N_S_uart_2800000_FULL_NAME "uart@2800000"
#define DT_N_S_uart_2800000_FULL_NAME_UNQUOTED uart@2800000
#define DT_N_S_uart_2800000_FULL_NAME_TOKEN uart_2800000
#define DT_N_S_uart_2800000_FULL_NAME_UPPER_TOKEN UART_2800000

/* Node parent (/) identifier: */
#define DT_N_S_uart_2800000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_uart_2800000_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_uart_2800000_NODELABEL_NUM 1
#define DT_N_S_uart_2800000_FOREACH_NODELABEL(fn) fn(uart0)
#define DT_N_S_uart_2800000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0, __VA_ARGS__)
#define DT_N_S_uart_2800000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_uart_2800000_CHILD_NUM 0
#define DT_N_S_uart_2800000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_uart_2800000_FOREACH_CHILD(fn) 
#define DT_N_S_uart_2800000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_uart_2800000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_uart_2800000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_uart_2800000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_uart_2800000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_uart_2800000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_uart_2800000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_uart_2800000_HASH 6oDW_1dcookjd3mZualYFMxDEoR1DiQyh_yUA261dzU

/* Node's dependency ordinal: */
#define DT_N_S_uart_2800000_ORD 13
#define DT_N_S_uart_2800000_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_uart_2800000_REQUIRES_ORDS \
	0, /* / */ \
	11, /* /interrupt-controller@7ff0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_uart_2800000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_uart_2800000_EXISTS 1
#define DT_N_INST_2_ns16550  DT_N_S_uart_2800000
#define DT_N_NODELABEL_uart0 DT_N_S_uart_2800000

/* Macros for properties that are special in the specification: */
#define DT_N_S_uart_2800000_REG_NUM 1
#define DT_N_S_uart_2800000_REG_IDX_0_EXISTS 1
#define DT_N_S_uart_2800000_REG_IDX_0_VAL_ADDRESS 41943040 /* 0x2800000 */
#define DT_N_S_uart_2800000_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_uart_2800000_RANGES_NUM 0
#define DT_N_S_uart_2800000_FOREACH_RANGE(fn) 
#define DT_N_S_uart_2800000_IRQ_NUM 1
#define DT_N_S_uart_2800000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2800000_IRQ_IDX_0_VAL_type 0
#define DT_N_S_uart_2800000_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_uart_2800000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2800000_IRQ_IDX_0_VAL_irq 210
#define DT_N_S_uart_2800000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_uart_2800000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2800000_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_uart_2800000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_uart_2800000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2800000_IRQ_IDX_0_VAL_priority 15
#define DT_N_S_uart_2800000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_uart_2800000_IRQ_IDX_0_CONTROLLER DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2800000_IRQ_LEVEL 1
#define DT_N_S_uart_2800000_COMPAT_MATCHES_ns16550 1
#define DT_N_S_uart_2800000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_uart_2800000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_uart_2800000_P_reg_shift 2
#define DT_N_S_uart_2800000_P_reg_shift_EXISTS 1
#define DT_N_S_uart_2800000_P_io_mapped 0
#define DT_N_S_uart_2800000_P_io_mapped_EXISTS 1
#define DT_N_S_uart_2800000_P_clock_frequency 48000000
#define DT_N_S_uart_2800000_P_clock_frequency_EXISTS 1
#define DT_N_S_uart_2800000_P_hw_flow_control 0
#define DT_N_S_uart_2800000_P_hw_flow_control_EXISTS 1
#define DT_N_S_uart_2800000_P_parity "none"
#define DT_N_S_uart_2800000_P_parity_STRING_UNQUOTED none
#define DT_N_S_uart_2800000_P_parity_STRING_TOKEN none
#define DT_N_S_uart_2800000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_uart_2800000_P_parity_IDX_0 "none"
#define DT_N_S_uart_2800000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_uart_2800000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_uart_2800000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_uart_2800000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2800000, parity, 0)
#define DT_N_S_uart_2800000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2800000, parity, 0)
#define DT_N_S_uart_2800000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2800000, parity, 0, __VA_ARGS__)
#define DT_N_S_uart_2800000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2800000, parity, 0, __VA_ARGS__)
#define DT_N_S_uart_2800000_P_parity_LEN 1
#define DT_N_S_uart_2800000_P_parity_EXISTS 1
#define DT_N_S_uart_2800000_P_status "disabled"
#define DT_N_S_uart_2800000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_uart_2800000_P_status_STRING_TOKEN disabled
#define DT_N_S_uart_2800000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_uart_2800000_P_status_IDX_0 "disabled"
#define DT_N_S_uart_2800000_P_status_IDX_0_EXISTS 1
#define DT_N_S_uart_2800000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_uart_2800000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_uart_2800000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2800000, status, 0)
#define DT_N_S_uart_2800000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2800000, status, 0)
#define DT_N_S_uart_2800000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2800000, status, 0, __VA_ARGS__)
#define DT_N_S_uart_2800000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2800000, status, 0, __VA_ARGS__)
#define DT_N_S_uart_2800000_P_status_LEN 1
#define DT_N_S_uart_2800000_P_status_EXISTS 1
#define DT_N_S_uart_2800000_P_compatible {"ns16550"}
#define DT_N_S_uart_2800000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_uart_2800000_P_compatible_IDX_0 "ns16550"
#define DT_N_S_uart_2800000_P_compatible_IDX_0_STRING_UNQUOTED ns16550
#define DT_N_S_uart_2800000_P_compatible_IDX_0_STRING_TOKEN ns16550
#define DT_N_S_uart_2800000_P_compatible_IDX_0_STRING_UPPER_TOKEN NS16550
#define DT_N_S_uart_2800000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2800000, compatible, 0)
#define DT_N_S_uart_2800000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2800000, compatible, 0)
#define DT_N_S_uart_2800000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2800000, compatible, 0, __VA_ARGS__)
#define DT_N_S_uart_2800000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2800000, compatible, 0, __VA_ARGS__)
#define DT_N_S_uart_2800000_P_compatible_LEN 1
#define DT_N_S_uart_2800000_P_compatible_EXISTS 1
#define DT_N_S_uart_2800000_P_reg {41943040 /* 0x2800000 */, 256 /* 0x100 */}
#define DT_N_S_uart_2800000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_uart_2800000_P_reg_IDX_0 41943040
#define DT_N_S_uart_2800000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_uart_2800000_P_reg_IDX_1 256
#define DT_N_S_uart_2800000_P_reg_EXISTS 1
#define DT_N_S_uart_2800000_P_interrupts {0 /* 0x0 */, 210 /* 0xd2 */, 2 /* 0x2 */, 15 /* 0xf */}
#define DT_N_S_uart_2800000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_uart_2800000_P_interrupts_IDX_0 0
#define DT_N_S_uart_2800000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_uart_2800000_P_interrupts_IDX_1 210
#define DT_N_S_uart_2800000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_uart_2800000_P_interrupts_IDX_2 2
#define DT_N_S_uart_2800000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_uart_2800000_P_interrupts_IDX_3 15
#define DT_N_S_uart_2800000_P_interrupts_EXISTS 1
#define DT_N_S_uart_2800000_P_interrupt_parent DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2800000_P_interrupt_parent_IDX_0 DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2800000_P_interrupt_parent_IDX_0_PH DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2800000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_uart_2800000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2800000, interrupt_parent, 0)
#define DT_N_S_uart_2800000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2800000, interrupt_parent, 0)
#define DT_N_S_uart_2800000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2800000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_uart_2800000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2800000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_uart_2800000_P_interrupt_parent_LEN 1
#define DT_N_S_uart_2800000_P_interrupt_parent_EXISTS 1
#define DT_N_S_uart_2800000_P_zephyr_deferred_init 0
#define DT_N_S_uart_2800000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_uart_2800000_P_wakeup_source 0
#define DT_N_S_uart_2800000_P_wakeup_source_EXISTS 1
#define DT_N_S_uart_2800000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_uart_2800000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pinctrl@f4000
 *
 * Node identifier: DT_N_S_pinctrl_f4000
 *
 * Binding (compatible = ti,k3-pinctrl):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/pinctrl/ti,k3-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pinctrl_f4000_PATH "/pinctrl@f4000"

/* Node's name with unit-address: */
#define DT_N_S_pinctrl_f4000_FULL_NAME "pinctrl@f4000"
#define DT_N_S_pinctrl_f4000_FULL_NAME_UNQUOTED pinctrl@f4000
#define DT_N_S_pinctrl_f4000_FULL_NAME_TOKEN pinctrl_f4000
#define DT_N_S_pinctrl_f4000_FULL_NAME_UPPER_TOKEN PINCTRL_F4000

/* Node parent (/) identifier: */
#define DT_N_S_pinctrl_f4000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_pinctrl_f4000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_pinctrl_f4000_NODELABEL_NUM 1
#define DT_N_S_pinctrl_f4000_FOREACH_NODELABEL(fn) fn(pinctrl)
#define DT_N_S_pinctrl_f4000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinctrl, __VA_ARGS__)
#define DT_N_S_pinctrl_f4000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pinctrl_f4000_CHILD_NUM 2
#define DT_N_S_pinctrl_f4000_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_pinctrl_f4000_FOREACH_CHILD(fn) fn(DT_N_S_pinctrl_f4000_S_uart1_rx_default) fn(DT_N_S_pinctrl_f4000_S_uart1_tx_default)
#define DT_N_S_pinctrl_f4000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pinctrl_f4000_S_uart1_rx_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_f4000_S_uart1_tx_default)
#define DT_N_S_pinctrl_f4000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pinctrl_f4000_S_uart1_rx_default, __VA_ARGS__) fn(DT_N_S_pinctrl_f4000_S_uart1_tx_default, __VA_ARGS__)
#define DT_N_S_pinctrl_f4000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_f4000_S_uart1_rx_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_f4000_S_uart1_tx_default, __VA_ARGS__)
#define DT_N_S_pinctrl_f4000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pinctrl_f4000_S_uart1_rx_default) fn(DT_N_S_pinctrl_f4000_S_uart1_tx_default)
#define DT_N_S_pinctrl_f4000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pinctrl_f4000_S_uart1_rx_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_f4000_S_uart1_tx_default)
#define DT_N_S_pinctrl_f4000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pinctrl_f4000_S_uart1_rx_default, __VA_ARGS__) fn(DT_N_S_pinctrl_f4000_S_uart1_tx_default, __VA_ARGS__)
#define DT_N_S_pinctrl_f4000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_f4000_S_uart1_rx_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pinctrl_f4000_S_uart1_tx_default, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pinctrl_f4000_HASH XI9r5dslhyp0MRmCtklwexFH7LGvWFufibcGOmh5uDE

/* Node's dependency ordinal: */
#define DT_N_S_pinctrl_f4000_ORD 14
#define DT_N_S_pinctrl_f4000_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pinctrl_f4000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pinctrl_f4000_SUPPORTS_ORDS \
	15, /* /pinctrl@f4000/uart1_rx_default */ \
	16, /* /pinctrl@f4000/uart1_tx_default */

/* Existence and alternate IDs: */
#define DT_N_S_pinctrl_f4000_EXISTS 1
#define DT_N_INST_0_ti_k3_pinctrl DT_N_S_pinctrl_f4000
#define DT_N_NODELABEL_pinctrl    DT_N_S_pinctrl_f4000

/* Macros for properties that are special in the specification: */
#define DT_N_S_pinctrl_f4000_REG_NUM 1
#define DT_N_S_pinctrl_f4000_REG_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_f4000_REG_IDX_0_VAL_ADDRESS 999424 /* 0xf4000 */
#define DT_N_S_pinctrl_f4000_REG_IDX_0_VAL_SIZE 684 /* 0x2ac */
#define DT_N_S_pinctrl_f4000_RANGES_NUM 0
#define DT_N_S_pinctrl_f4000_FOREACH_RANGE(fn) 
#define DT_N_S_pinctrl_f4000_IRQ_NUM 0
#define DT_N_S_pinctrl_f4000_IRQ_LEVEL 0
#define DT_N_S_pinctrl_f4000_COMPAT_MATCHES_ti_k3_pinctrl 1
#define DT_N_S_pinctrl_f4000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_f4000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_pinctrl_f4000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_f4000_COMPAT_MODEL_IDX_0 "k3-pinctrl"
#define DT_N_S_pinctrl_f4000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pinctrl_f4000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pinctrl_f4000_P_reg {999424 /* 0xf4000 */, 684 /* 0x2ac */}
#define DT_N_S_pinctrl_f4000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_f4000_P_reg_IDX_0 999424
#define DT_N_S_pinctrl_f4000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_pinctrl_f4000_P_reg_IDX_1 684
#define DT_N_S_pinctrl_f4000_P_reg_EXISTS 1
#define DT_N_S_pinctrl_f4000_P_status "okay"
#define DT_N_S_pinctrl_f4000_P_status_STRING_UNQUOTED okay
#define DT_N_S_pinctrl_f4000_P_status_STRING_TOKEN okay
#define DT_N_S_pinctrl_f4000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_pinctrl_f4000_P_status_IDX_0 "okay"
#define DT_N_S_pinctrl_f4000_P_status_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_f4000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_pinctrl_f4000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_pinctrl_f4000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_f4000, status, 0)
#define DT_N_S_pinctrl_f4000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_f4000, status, 0)
#define DT_N_S_pinctrl_f4000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_f4000, status, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_f4000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_f4000, status, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_f4000_P_status_LEN 1
#define DT_N_S_pinctrl_f4000_P_status_EXISTS 1
#define DT_N_S_pinctrl_f4000_P_compatible {"ti,k3-pinctrl"}
#define DT_N_S_pinctrl_f4000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_f4000_P_compatible_IDX_0 "ti,k3-pinctrl"
#define DT_N_S_pinctrl_f4000_P_compatible_IDX_0_STRING_UNQUOTED ti,k3-pinctrl
#define DT_N_S_pinctrl_f4000_P_compatible_IDX_0_STRING_TOKEN ti_k3_pinctrl
#define DT_N_S_pinctrl_f4000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_K3_PINCTRL
#define DT_N_S_pinctrl_f4000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_f4000, compatible, 0)
#define DT_N_S_pinctrl_f4000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_f4000, compatible, 0)
#define DT_N_S_pinctrl_f4000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_f4000, compatible, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_f4000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_f4000, compatible, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_f4000_P_compatible_LEN 1
#define DT_N_S_pinctrl_f4000_P_compatible_EXISTS 1
#define DT_N_S_pinctrl_f4000_P_zephyr_deferred_init 0
#define DT_N_S_pinctrl_f4000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_pinctrl_f4000_P_wakeup_source 0
#define DT_N_S_pinctrl_f4000_P_wakeup_source_EXISTS 1
#define DT_N_S_pinctrl_f4000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_pinctrl_f4000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pinctrl@f4000/uart1_rx_default
 *
 * Node identifier: DT_N_S_pinctrl_f4000_S_uart1_rx_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_PATH "/pinctrl@f4000/uart1_rx_default"

/* Node's name with unit-address: */
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_FULL_NAME "uart1_rx_default"
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_FULL_NAME_UNQUOTED uart1_rx_default
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_FULL_NAME_TOKEN uart1_rx_default
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_FULL_NAME_UPPER_TOKEN UART1_RX_DEFAULT

/* Node parent (/pinctrl@f4000) identifier: */
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_PARENT DT_N_S_pinctrl_f4000

/* Node's index in its parent's list of children: */
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_NODELABEL_NUM 1
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_FOREACH_NODELABEL(fn) fn(uart1_rx_default)
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart1_rx_default, __VA_ARGS__)
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_pinctrl_f4000) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_CHILD_NUM 0
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_FOREACH_CHILD(fn) 
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_HASH pL085XBsh8KLWqT_JZ5Q4quMX6i7WPYbtOT5YjWxAY8

/* Node's dependency ordinal: */
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_ORD 15
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_REQUIRES_ORDS \
	14, /* /pinctrl@f4000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_SUPPORTS_ORDS \
	17, /* /uart@2810000 */

/* Existence and alternate IDs: */
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_EXISTS 1
#define DT_N_NODELABEL_uart1_rx_default DT_N_S_pinctrl_f4000_S_uart1_rx_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_REG_NUM 0
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_RANGES_NUM 0
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_FOREACH_RANGE(fn) 
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_IRQ_NUM 0
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_IRQ_LEVEL 0
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_P_pinmux {428 /* 0x1ac */, 327682 /* 0x50002 */}
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_P_pinmux_IDX_0 428
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_P_pinmux_IDX_1 327682
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_f4000_S_uart1_rx_default, pinmux, 0) \
	fn(DT_N_S_pinctrl_f4000_S_uart1_rx_default, pinmux, 1)
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_f4000_S_uart1_rx_default, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_f4000_S_uart1_rx_default, pinmux, 1)
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_f4000_S_uart1_rx_default, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pinctrl_f4000_S_uart1_rx_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_f4000_S_uart1_rx_default, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_f4000_S_uart1_rx_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_P_pinmux_LEN 2
#define DT_N_S_pinctrl_f4000_S_uart1_rx_default_P_pinmux_EXISTS 1

/*
 * Devicetree node: /pinctrl@f4000/uart1_tx_default
 *
 * Node identifier: DT_N_S_pinctrl_f4000_S_uart1_tx_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_PATH "/pinctrl@f4000/uart1_tx_default"

/* Node's name with unit-address: */
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_FULL_NAME "uart1_tx_default"
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_FULL_NAME_UNQUOTED uart1_tx_default
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_FULL_NAME_TOKEN uart1_tx_default
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_FULL_NAME_UPPER_TOKEN UART1_TX_DEFAULT

/* Node parent (/pinctrl@f4000) identifier: */
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_PARENT DT_N_S_pinctrl_f4000

/* Node's index in its parent's list of children: */
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_NODELABEL_NUM 1
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_FOREACH_NODELABEL(fn) fn(uart1_tx_default)
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart1_tx_default, __VA_ARGS__)
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_pinctrl_f4000) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_CHILD_NUM 0
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_FOREACH_CHILD(fn) 
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_HASH xdwFjHtAT_2DjVffVOAYKTX_JMw0scmlex_OypVK_AI

/* Node's dependency ordinal: */
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_ORD 16
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_REQUIRES_ORDS \
	14, /* /pinctrl@f4000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_SUPPORTS_ORDS \
	17, /* /uart@2810000 */

/* Existence and alternate IDs: */
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_EXISTS 1
#define DT_N_NODELABEL_uart1_tx_default DT_N_S_pinctrl_f4000_S_uart1_tx_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_REG_NUM 0
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_RANGES_NUM 0
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_FOREACH_RANGE(fn) 
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_IRQ_NUM 0
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_IRQ_LEVEL 0
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_P_pinmux {432 /* 0x1b0 */, 65538 /* 0x10002 */}
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_P_pinmux_IDX_0 432
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_P_pinmux_IDX_1 65538
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_f4000_S_uart1_tx_default, pinmux, 0) \
	fn(DT_N_S_pinctrl_f4000_S_uart1_tx_default, pinmux, 1)
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_f4000_S_uart1_tx_default, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_f4000_S_uart1_tx_default, pinmux, 1)
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_f4000_S_uart1_tx_default, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pinctrl_f4000_S_uart1_tx_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_f4000_S_uart1_tx_default, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_f4000_S_uart1_tx_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_P_pinmux_LEN 2
#define DT_N_S_pinctrl_f4000_S_uart1_tx_default_P_pinmux_EXISTS 1

/*
 * Devicetree node: /uart@2810000
 *
 * Node identifier: DT_N_S_uart_2810000
 *
 * Binding (compatible = ns16550):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/serial/ns16550.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_uart_2810000_PATH "/uart@2810000"

/* Node's name with unit-address: */
#define DT_N_S_uart_2810000_FULL_NAME "uart@2810000"
#define DT_N_S_uart_2810000_FULL_NAME_UNQUOTED uart@2810000
#define DT_N_S_uart_2810000_FULL_NAME_TOKEN uart_2810000
#define DT_N_S_uart_2810000_FULL_NAME_UPPER_TOKEN UART_2810000

/* Node parent (/) identifier: */
#define DT_N_S_uart_2810000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_uart_2810000_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_uart_2810000_NODELABEL_NUM 1
#define DT_N_S_uart_2810000_FOREACH_NODELABEL(fn) fn(uart1)
#define DT_N_S_uart_2810000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart1, __VA_ARGS__)
#define DT_N_S_uart_2810000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_uart_2810000_CHILD_NUM 0
#define DT_N_S_uart_2810000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_uart_2810000_FOREACH_CHILD(fn) 
#define DT_N_S_uart_2810000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_uart_2810000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_uart_2810000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_uart_2810000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_uart_2810000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_uart_2810000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_uart_2810000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_uart_2810000_HASH WNeARht_JUhvSwJ5so8q2KFeIoHOg8XxEXoTbvfmzv4

/* Node's dependency ordinal: */
#define DT_N_S_uart_2810000_ORD 17
#define DT_N_S_uart_2810000_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_uart_2810000_REQUIRES_ORDS \
	0, /* / */ \
	11, /* /interrupt-controller@7ff0000 */ \
	15, /* /pinctrl@f4000/uart1_rx_default */ \
	16, /* /pinctrl@f4000/uart1_tx_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_uart_2810000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_uart_2810000_EXISTS 1
#define DT_N_INST_0_ns16550  DT_N_S_uart_2810000
#define DT_N_NODELABEL_uart1 DT_N_S_uart_2810000

/* Macros for properties that are special in the specification: */
#define DT_N_S_uart_2810000_REG_NUM 1
#define DT_N_S_uart_2810000_REG_IDX_0_EXISTS 1
#define DT_N_S_uart_2810000_REG_IDX_0_VAL_ADDRESS 42008576 /* 0x2810000 */
#define DT_N_S_uart_2810000_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_uart_2810000_RANGES_NUM 0
#define DT_N_S_uart_2810000_FOREACH_RANGE(fn) 
#define DT_N_S_uart_2810000_IRQ_NUM 1
#define DT_N_S_uart_2810000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2810000_IRQ_IDX_0_VAL_type 0
#define DT_N_S_uart_2810000_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_uart_2810000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2810000_IRQ_IDX_0_VAL_irq 211
#define DT_N_S_uart_2810000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_uart_2810000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2810000_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_uart_2810000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_uart_2810000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2810000_IRQ_IDX_0_VAL_priority 15
#define DT_N_S_uart_2810000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_uart_2810000_IRQ_IDX_0_CONTROLLER DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2810000_IRQ_LEVEL 1
#define DT_N_S_uart_2810000_COMPAT_MATCHES_ns16550 1
#define DT_N_S_uart_2810000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_uart_2810000_PINCTRL_NUM 1
#define DT_N_S_uart_2810000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_uart_2810000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_uart_2810000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_uart_2810000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_uart_2810000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_uart_2810000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pinctrl_f4000_S_uart1_tx_default
#define DT_N_S_uart_2810000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_pinctrl_f4000_S_uart1_rx_default

/* Generic property macros: */
#define DT_N_S_uart_2810000_P_reg_shift 2
#define DT_N_S_uart_2810000_P_reg_shift_EXISTS 1
#define DT_N_S_uart_2810000_P_io_mapped 0
#define DT_N_S_uart_2810000_P_io_mapped_EXISTS 1
#define DT_N_S_uart_2810000_P_clock_frequency 48000000
#define DT_N_S_uart_2810000_P_clock_frequency_EXISTS 1
#define DT_N_S_uart_2810000_P_current_speed 115200
#define DT_N_S_uart_2810000_P_current_speed_EXISTS 1
#define DT_N_S_uart_2810000_P_hw_flow_control 0
#define DT_N_S_uart_2810000_P_hw_flow_control_EXISTS 1
#define DT_N_S_uart_2810000_P_parity "none"
#define DT_N_S_uart_2810000_P_parity_STRING_UNQUOTED none
#define DT_N_S_uart_2810000_P_parity_STRING_TOKEN none
#define DT_N_S_uart_2810000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_uart_2810000_P_parity_IDX_0 "none"
#define DT_N_S_uart_2810000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_uart_2810000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_uart_2810000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_uart_2810000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2810000, parity, 0)
#define DT_N_S_uart_2810000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2810000, parity, 0)
#define DT_N_S_uart_2810000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2810000, parity, 0, __VA_ARGS__)
#define DT_N_S_uart_2810000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2810000, parity, 0, __VA_ARGS__)
#define DT_N_S_uart_2810000_P_parity_LEN 1
#define DT_N_S_uart_2810000_P_parity_EXISTS 1
#define DT_N_S_uart_2810000_P_status "okay"
#define DT_N_S_uart_2810000_P_status_STRING_UNQUOTED okay
#define DT_N_S_uart_2810000_P_status_STRING_TOKEN okay
#define DT_N_S_uart_2810000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_uart_2810000_P_status_IDX_0 "okay"
#define DT_N_S_uart_2810000_P_status_IDX_0_EXISTS 1
#define DT_N_S_uart_2810000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_uart_2810000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_uart_2810000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2810000, status, 0)
#define DT_N_S_uart_2810000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2810000, status, 0)
#define DT_N_S_uart_2810000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2810000, status, 0, __VA_ARGS__)
#define DT_N_S_uart_2810000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2810000, status, 0, __VA_ARGS__)
#define DT_N_S_uart_2810000_P_status_LEN 1
#define DT_N_S_uart_2810000_P_status_EXISTS 1
#define DT_N_S_uart_2810000_P_compatible {"ns16550"}
#define DT_N_S_uart_2810000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_uart_2810000_P_compatible_IDX_0 "ns16550"
#define DT_N_S_uart_2810000_P_compatible_IDX_0_STRING_UNQUOTED ns16550
#define DT_N_S_uart_2810000_P_compatible_IDX_0_STRING_TOKEN ns16550
#define DT_N_S_uart_2810000_P_compatible_IDX_0_STRING_UPPER_TOKEN NS16550
#define DT_N_S_uart_2810000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2810000, compatible, 0)
#define DT_N_S_uart_2810000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2810000, compatible, 0)
#define DT_N_S_uart_2810000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2810000, compatible, 0, __VA_ARGS__)
#define DT_N_S_uart_2810000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2810000, compatible, 0, __VA_ARGS__)
#define DT_N_S_uart_2810000_P_compatible_LEN 1
#define DT_N_S_uart_2810000_P_compatible_EXISTS 1
#define DT_N_S_uart_2810000_P_reg {42008576 /* 0x2810000 */, 256 /* 0x100 */}
#define DT_N_S_uart_2810000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_uart_2810000_P_reg_IDX_0 42008576
#define DT_N_S_uart_2810000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_uart_2810000_P_reg_IDX_1 256
#define DT_N_S_uart_2810000_P_reg_EXISTS 1
#define DT_N_S_uart_2810000_P_interrupts {0 /* 0x0 */, 211 /* 0xd3 */, 2 /* 0x2 */, 15 /* 0xf */}
#define DT_N_S_uart_2810000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_uart_2810000_P_interrupts_IDX_0 0
#define DT_N_S_uart_2810000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_uart_2810000_P_interrupts_IDX_1 211
#define DT_N_S_uart_2810000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_uart_2810000_P_interrupts_IDX_2 2
#define DT_N_S_uart_2810000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_uart_2810000_P_interrupts_IDX_3 15
#define DT_N_S_uart_2810000_P_interrupts_EXISTS 1
#define DT_N_S_uart_2810000_P_interrupt_parent DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2810000_P_interrupt_parent_IDX_0 DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2810000_P_interrupt_parent_IDX_0_PH DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2810000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_uart_2810000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2810000, interrupt_parent, 0)
#define DT_N_S_uart_2810000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2810000, interrupt_parent, 0)
#define DT_N_S_uart_2810000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2810000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_uart_2810000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2810000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_uart_2810000_P_interrupt_parent_LEN 1
#define DT_N_S_uart_2810000_P_interrupt_parent_EXISTS 1
#define DT_N_S_uart_2810000_P_zephyr_deferred_init 0
#define DT_N_S_uart_2810000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_uart_2810000_P_wakeup_source 0
#define DT_N_S_uart_2810000_P_wakeup_source_EXISTS 1
#define DT_N_S_uart_2810000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_uart_2810000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_uart_2810000_P_pinctrl_0_IDX_0 DT_N_S_pinctrl_f4000_S_uart1_tx_default
#define DT_N_S_uart_2810000_P_pinctrl_0_IDX_0_PH DT_N_S_pinctrl_f4000_S_uart1_tx_default
#define DT_N_S_uart_2810000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_uart_2810000_P_pinctrl_0_IDX_1 DT_N_S_pinctrl_f4000_S_uart1_rx_default
#define DT_N_S_uart_2810000_P_pinctrl_0_IDX_1_PH DT_N_S_pinctrl_f4000_S_uart1_rx_default
#define DT_N_S_uart_2810000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_uart_2810000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2810000, pinctrl_0, 0) \
	fn(DT_N_S_uart_2810000, pinctrl_0, 1)
#define DT_N_S_uart_2810000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2810000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_uart_2810000, pinctrl_0, 1)
#define DT_N_S_uart_2810000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2810000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_uart_2810000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_uart_2810000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2810000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_uart_2810000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_uart_2810000_P_pinctrl_0_LEN 2
#define DT_N_S_uart_2810000_P_pinctrl_0_EXISTS 1
#define DT_N_S_uart_2810000_P_pinctrl_names {"default"}
#define DT_N_S_uart_2810000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_uart_2810000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_uart_2810000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_uart_2810000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_uart_2810000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_uart_2810000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2810000, pinctrl_names, 0)
#define DT_N_S_uart_2810000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2810000, pinctrl_names, 0)
#define DT_N_S_uart_2810000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2810000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_uart_2810000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2810000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_uart_2810000_P_pinctrl_names_LEN 1
#define DT_N_S_uart_2810000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /uart@2820000
 *
 * Node identifier: DT_N_S_uart_2820000
 *
 * Binding (compatible = ns16550):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/serial/ns16550.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_uart_2820000_PATH "/uart@2820000"

/* Node's name with unit-address: */
#define DT_N_S_uart_2820000_FULL_NAME "uart@2820000"
#define DT_N_S_uart_2820000_FULL_NAME_UNQUOTED uart@2820000
#define DT_N_S_uart_2820000_FULL_NAME_TOKEN uart_2820000
#define DT_N_S_uart_2820000_FULL_NAME_UPPER_TOKEN UART_2820000

/* Node parent (/) identifier: */
#define DT_N_S_uart_2820000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_uart_2820000_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_uart_2820000_NODELABEL_NUM 1
#define DT_N_S_uart_2820000_FOREACH_NODELABEL(fn) fn(uart2)
#define DT_N_S_uart_2820000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart2, __VA_ARGS__)
#define DT_N_S_uart_2820000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_uart_2820000_CHILD_NUM 0
#define DT_N_S_uart_2820000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_uart_2820000_FOREACH_CHILD(fn) 
#define DT_N_S_uart_2820000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_uart_2820000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_uart_2820000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_uart_2820000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_uart_2820000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_uart_2820000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_uart_2820000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_uart_2820000_HASH _BAnEZTVTauPCY96ttwaQu_OnfsmdqR9sjRIEOxFazM

/* Node's dependency ordinal: */
#define DT_N_S_uart_2820000_ORD 18
#define DT_N_S_uart_2820000_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_uart_2820000_REQUIRES_ORDS \
	0, /* / */ \
	11, /* /interrupt-controller@7ff0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_uart_2820000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_uart_2820000_EXISTS 1
#define DT_N_INST_3_ns16550  DT_N_S_uart_2820000
#define DT_N_NODELABEL_uart2 DT_N_S_uart_2820000

/* Macros for properties that are special in the specification: */
#define DT_N_S_uart_2820000_REG_NUM 1
#define DT_N_S_uart_2820000_REG_IDX_0_EXISTS 1
#define DT_N_S_uart_2820000_REG_IDX_0_VAL_ADDRESS 42074112 /* 0x2820000 */
#define DT_N_S_uart_2820000_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_uart_2820000_RANGES_NUM 0
#define DT_N_S_uart_2820000_FOREACH_RANGE(fn) 
#define DT_N_S_uart_2820000_IRQ_NUM 1
#define DT_N_S_uart_2820000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2820000_IRQ_IDX_0_VAL_type 0
#define DT_N_S_uart_2820000_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_uart_2820000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2820000_IRQ_IDX_0_VAL_irq 212
#define DT_N_S_uart_2820000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_uart_2820000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2820000_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_uart_2820000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_uart_2820000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2820000_IRQ_IDX_0_VAL_priority 15
#define DT_N_S_uart_2820000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_uart_2820000_IRQ_IDX_0_CONTROLLER DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2820000_IRQ_LEVEL 1
#define DT_N_S_uart_2820000_COMPAT_MATCHES_ns16550 1
#define DT_N_S_uart_2820000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_uart_2820000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_uart_2820000_P_reg_shift 2
#define DT_N_S_uart_2820000_P_reg_shift_EXISTS 1
#define DT_N_S_uart_2820000_P_io_mapped 0
#define DT_N_S_uart_2820000_P_io_mapped_EXISTS 1
#define DT_N_S_uart_2820000_P_clock_frequency 48000000
#define DT_N_S_uart_2820000_P_clock_frequency_EXISTS 1
#define DT_N_S_uart_2820000_P_hw_flow_control 0
#define DT_N_S_uart_2820000_P_hw_flow_control_EXISTS 1
#define DT_N_S_uart_2820000_P_parity "none"
#define DT_N_S_uart_2820000_P_parity_STRING_UNQUOTED none
#define DT_N_S_uart_2820000_P_parity_STRING_TOKEN none
#define DT_N_S_uart_2820000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_uart_2820000_P_parity_IDX_0 "none"
#define DT_N_S_uart_2820000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_uart_2820000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_uart_2820000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_uart_2820000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2820000, parity, 0)
#define DT_N_S_uart_2820000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2820000, parity, 0)
#define DT_N_S_uart_2820000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2820000, parity, 0, __VA_ARGS__)
#define DT_N_S_uart_2820000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2820000, parity, 0, __VA_ARGS__)
#define DT_N_S_uart_2820000_P_parity_LEN 1
#define DT_N_S_uart_2820000_P_parity_EXISTS 1
#define DT_N_S_uart_2820000_P_status "disabled"
#define DT_N_S_uart_2820000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_uart_2820000_P_status_STRING_TOKEN disabled
#define DT_N_S_uart_2820000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_uart_2820000_P_status_IDX_0 "disabled"
#define DT_N_S_uart_2820000_P_status_IDX_0_EXISTS 1
#define DT_N_S_uart_2820000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_uart_2820000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_uart_2820000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2820000, status, 0)
#define DT_N_S_uart_2820000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2820000, status, 0)
#define DT_N_S_uart_2820000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2820000, status, 0, __VA_ARGS__)
#define DT_N_S_uart_2820000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2820000, status, 0, __VA_ARGS__)
#define DT_N_S_uart_2820000_P_status_LEN 1
#define DT_N_S_uart_2820000_P_status_EXISTS 1
#define DT_N_S_uart_2820000_P_compatible {"ns16550"}
#define DT_N_S_uart_2820000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_uart_2820000_P_compatible_IDX_0 "ns16550"
#define DT_N_S_uart_2820000_P_compatible_IDX_0_STRING_UNQUOTED ns16550
#define DT_N_S_uart_2820000_P_compatible_IDX_0_STRING_TOKEN ns16550
#define DT_N_S_uart_2820000_P_compatible_IDX_0_STRING_UPPER_TOKEN NS16550
#define DT_N_S_uart_2820000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2820000, compatible, 0)
#define DT_N_S_uart_2820000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2820000, compatible, 0)
#define DT_N_S_uart_2820000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2820000, compatible, 0, __VA_ARGS__)
#define DT_N_S_uart_2820000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2820000, compatible, 0, __VA_ARGS__)
#define DT_N_S_uart_2820000_P_compatible_LEN 1
#define DT_N_S_uart_2820000_P_compatible_EXISTS 1
#define DT_N_S_uart_2820000_P_reg {42074112 /* 0x2820000 */, 256 /* 0x100 */}
#define DT_N_S_uart_2820000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_uart_2820000_P_reg_IDX_0 42074112
#define DT_N_S_uart_2820000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_uart_2820000_P_reg_IDX_1 256
#define DT_N_S_uart_2820000_P_reg_EXISTS 1
#define DT_N_S_uart_2820000_P_interrupts {0 /* 0x0 */, 212 /* 0xd4 */, 2 /* 0x2 */, 15 /* 0xf */}
#define DT_N_S_uart_2820000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_uart_2820000_P_interrupts_IDX_0 0
#define DT_N_S_uart_2820000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_uart_2820000_P_interrupts_IDX_1 212
#define DT_N_S_uart_2820000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_uart_2820000_P_interrupts_IDX_2 2
#define DT_N_S_uart_2820000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_uart_2820000_P_interrupts_IDX_3 15
#define DT_N_S_uart_2820000_P_interrupts_EXISTS 1
#define DT_N_S_uart_2820000_P_interrupt_parent DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2820000_P_interrupt_parent_IDX_0 DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2820000_P_interrupt_parent_IDX_0_PH DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2820000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_uart_2820000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2820000, interrupt_parent, 0)
#define DT_N_S_uart_2820000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2820000, interrupt_parent, 0)
#define DT_N_S_uart_2820000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2820000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_uart_2820000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2820000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_uart_2820000_P_interrupt_parent_LEN 1
#define DT_N_S_uart_2820000_P_interrupt_parent_EXISTS 1
#define DT_N_S_uart_2820000_P_zephyr_deferred_init 0
#define DT_N_S_uart_2820000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_uart_2820000_P_wakeup_source 0
#define DT_N_S_uart_2820000_P_wakeup_source_EXISTS 1
#define DT_N_S_uart_2820000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_uart_2820000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /uart@2830000
 *
 * Node identifier: DT_N_S_uart_2830000
 *
 * Binding (compatible = ns16550):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/serial/ns16550.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_uart_2830000_PATH "/uart@2830000"

/* Node's name with unit-address: */
#define DT_N_S_uart_2830000_FULL_NAME "uart@2830000"
#define DT_N_S_uart_2830000_FULL_NAME_UNQUOTED uart@2830000
#define DT_N_S_uart_2830000_FULL_NAME_TOKEN uart_2830000
#define DT_N_S_uart_2830000_FULL_NAME_UPPER_TOKEN UART_2830000

/* Node parent (/) identifier: */
#define DT_N_S_uart_2830000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_uart_2830000_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_uart_2830000_NODELABEL_NUM 1
#define DT_N_S_uart_2830000_FOREACH_NODELABEL(fn) fn(uart3)
#define DT_N_S_uart_2830000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart3, __VA_ARGS__)
#define DT_N_S_uart_2830000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_uart_2830000_CHILD_NUM 0
#define DT_N_S_uart_2830000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_uart_2830000_FOREACH_CHILD(fn) 
#define DT_N_S_uart_2830000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_uart_2830000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_uart_2830000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_uart_2830000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_uart_2830000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_uart_2830000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_uart_2830000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_uart_2830000_HASH TUQPR_MGSzbY_cWAenrQUX5wLElrv4ggFpaN44QF5oU

/* Node's dependency ordinal: */
#define DT_N_S_uart_2830000_ORD 19
#define DT_N_S_uart_2830000_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_uart_2830000_REQUIRES_ORDS \
	0, /* / */ \
	11, /* /interrupt-controller@7ff0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_uart_2830000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_uart_2830000_EXISTS 1
#define DT_N_INST_4_ns16550  DT_N_S_uart_2830000
#define DT_N_NODELABEL_uart3 DT_N_S_uart_2830000

/* Macros for properties that are special in the specification: */
#define DT_N_S_uart_2830000_REG_NUM 1
#define DT_N_S_uart_2830000_REG_IDX_0_EXISTS 1
#define DT_N_S_uart_2830000_REG_IDX_0_VAL_ADDRESS 42139648 /* 0x2830000 */
#define DT_N_S_uart_2830000_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_uart_2830000_RANGES_NUM 0
#define DT_N_S_uart_2830000_FOREACH_RANGE(fn) 
#define DT_N_S_uart_2830000_IRQ_NUM 1
#define DT_N_S_uart_2830000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2830000_IRQ_IDX_0_VAL_type 0
#define DT_N_S_uart_2830000_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_uart_2830000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2830000_IRQ_IDX_0_VAL_irq 213
#define DT_N_S_uart_2830000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_uart_2830000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2830000_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_uart_2830000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_uart_2830000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2830000_IRQ_IDX_0_VAL_priority 15
#define DT_N_S_uart_2830000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_uart_2830000_IRQ_IDX_0_CONTROLLER DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2830000_IRQ_LEVEL 1
#define DT_N_S_uart_2830000_COMPAT_MATCHES_ns16550 1
#define DT_N_S_uart_2830000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_uart_2830000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_uart_2830000_P_reg_shift 2
#define DT_N_S_uart_2830000_P_reg_shift_EXISTS 1
#define DT_N_S_uart_2830000_P_io_mapped 0
#define DT_N_S_uart_2830000_P_io_mapped_EXISTS 1
#define DT_N_S_uart_2830000_P_clock_frequency 48000000
#define DT_N_S_uart_2830000_P_clock_frequency_EXISTS 1
#define DT_N_S_uart_2830000_P_hw_flow_control 0
#define DT_N_S_uart_2830000_P_hw_flow_control_EXISTS 1
#define DT_N_S_uart_2830000_P_parity "none"
#define DT_N_S_uart_2830000_P_parity_STRING_UNQUOTED none
#define DT_N_S_uart_2830000_P_parity_STRING_TOKEN none
#define DT_N_S_uart_2830000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_uart_2830000_P_parity_IDX_0 "none"
#define DT_N_S_uart_2830000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_uart_2830000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_uart_2830000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_uart_2830000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2830000, parity, 0)
#define DT_N_S_uart_2830000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2830000, parity, 0)
#define DT_N_S_uart_2830000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2830000, parity, 0, __VA_ARGS__)
#define DT_N_S_uart_2830000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2830000, parity, 0, __VA_ARGS__)
#define DT_N_S_uart_2830000_P_parity_LEN 1
#define DT_N_S_uart_2830000_P_parity_EXISTS 1
#define DT_N_S_uart_2830000_P_status "disabled"
#define DT_N_S_uart_2830000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_uart_2830000_P_status_STRING_TOKEN disabled
#define DT_N_S_uart_2830000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_uart_2830000_P_status_IDX_0 "disabled"
#define DT_N_S_uart_2830000_P_status_IDX_0_EXISTS 1
#define DT_N_S_uart_2830000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_uart_2830000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_uart_2830000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2830000, status, 0)
#define DT_N_S_uart_2830000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2830000, status, 0)
#define DT_N_S_uart_2830000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2830000, status, 0, __VA_ARGS__)
#define DT_N_S_uart_2830000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2830000, status, 0, __VA_ARGS__)
#define DT_N_S_uart_2830000_P_status_LEN 1
#define DT_N_S_uart_2830000_P_status_EXISTS 1
#define DT_N_S_uart_2830000_P_compatible {"ns16550"}
#define DT_N_S_uart_2830000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_uart_2830000_P_compatible_IDX_0 "ns16550"
#define DT_N_S_uart_2830000_P_compatible_IDX_0_STRING_UNQUOTED ns16550
#define DT_N_S_uart_2830000_P_compatible_IDX_0_STRING_TOKEN ns16550
#define DT_N_S_uart_2830000_P_compatible_IDX_0_STRING_UPPER_TOKEN NS16550
#define DT_N_S_uart_2830000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2830000, compatible, 0)
#define DT_N_S_uart_2830000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2830000, compatible, 0)
#define DT_N_S_uart_2830000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2830000, compatible, 0, __VA_ARGS__)
#define DT_N_S_uart_2830000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2830000, compatible, 0, __VA_ARGS__)
#define DT_N_S_uart_2830000_P_compatible_LEN 1
#define DT_N_S_uart_2830000_P_compatible_EXISTS 1
#define DT_N_S_uart_2830000_P_reg {42139648 /* 0x2830000 */, 256 /* 0x100 */}
#define DT_N_S_uart_2830000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_uart_2830000_P_reg_IDX_0 42139648
#define DT_N_S_uart_2830000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_uart_2830000_P_reg_IDX_1 256
#define DT_N_S_uart_2830000_P_reg_EXISTS 1
#define DT_N_S_uart_2830000_P_interrupts {0 /* 0x0 */, 213 /* 0xd5 */, 2 /* 0x2 */, 15 /* 0xf */}
#define DT_N_S_uart_2830000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_uart_2830000_P_interrupts_IDX_0 0
#define DT_N_S_uart_2830000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_uart_2830000_P_interrupts_IDX_1 213
#define DT_N_S_uart_2830000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_uart_2830000_P_interrupts_IDX_2 2
#define DT_N_S_uart_2830000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_uart_2830000_P_interrupts_IDX_3 15
#define DT_N_S_uart_2830000_P_interrupts_EXISTS 1
#define DT_N_S_uart_2830000_P_interrupt_parent DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2830000_P_interrupt_parent_IDX_0 DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2830000_P_interrupt_parent_IDX_0_PH DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2830000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_uart_2830000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2830000, interrupt_parent, 0)
#define DT_N_S_uart_2830000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2830000, interrupt_parent, 0)
#define DT_N_S_uart_2830000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2830000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_uart_2830000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2830000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_uart_2830000_P_interrupt_parent_LEN 1
#define DT_N_S_uart_2830000_P_interrupt_parent_EXISTS 1
#define DT_N_S_uart_2830000_P_zephyr_deferred_init 0
#define DT_N_S_uart_2830000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_uart_2830000_P_wakeup_source 0
#define DT_N_S_uart_2830000_P_wakeup_source_EXISTS 1
#define DT_N_S_uart_2830000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_uart_2830000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /uart@2840000
 *
 * Node identifier: DT_N_S_uart_2840000
 *
 * Binding (compatible = ns16550):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/serial/ns16550.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_uart_2840000_PATH "/uart@2840000"

/* Node's name with unit-address: */
#define DT_N_S_uart_2840000_FULL_NAME "uart@2840000"
#define DT_N_S_uart_2840000_FULL_NAME_UNQUOTED uart@2840000
#define DT_N_S_uart_2840000_FULL_NAME_TOKEN uart_2840000
#define DT_N_S_uart_2840000_FULL_NAME_UPPER_TOKEN UART_2840000

/* Node parent (/) identifier: */
#define DT_N_S_uart_2840000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_uart_2840000_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_uart_2840000_NODELABEL_NUM 1
#define DT_N_S_uart_2840000_FOREACH_NODELABEL(fn) fn(uart4)
#define DT_N_S_uart_2840000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart4, __VA_ARGS__)
#define DT_N_S_uart_2840000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_uart_2840000_CHILD_NUM 0
#define DT_N_S_uart_2840000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_uart_2840000_FOREACH_CHILD(fn) 
#define DT_N_S_uart_2840000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_uart_2840000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_uart_2840000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_uart_2840000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_uart_2840000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_uart_2840000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_uart_2840000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_uart_2840000_HASH YJevskH7fsJn8hDKTOCho6Wwc64uIYYC80wVUBKXGuU

/* Node's dependency ordinal: */
#define DT_N_S_uart_2840000_ORD 20
#define DT_N_S_uart_2840000_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_uart_2840000_REQUIRES_ORDS \
	0, /* / */ \
	11, /* /interrupt-controller@7ff0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_uart_2840000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_uart_2840000_EXISTS 1
#define DT_N_INST_5_ns16550  DT_N_S_uart_2840000
#define DT_N_NODELABEL_uart4 DT_N_S_uart_2840000

/* Macros for properties that are special in the specification: */
#define DT_N_S_uart_2840000_REG_NUM 1
#define DT_N_S_uart_2840000_REG_IDX_0_EXISTS 1
#define DT_N_S_uart_2840000_REG_IDX_0_VAL_ADDRESS 42205184 /* 0x2840000 */
#define DT_N_S_uart_2840000_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_uart_2840000_RANGES_NUM 0
#define DT_N_S_uart_2840000_FOREACH_RANGE(fn) 
#define DT_N_S_uart_2840000_IRQ_NUM 1
#define DT_N_S_uart_2840000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2840000_IRQ_IDX_0_VAL_type 0
#define DT_N_S_uart_2840000_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_uart_2840000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2840000_IRQ_IDX_0_VAL_irq 214
#define DT_N_S_uart_2840000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_uart_2840000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2840000_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_uart_2840000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_uart_2840000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2840000_IRQ_IDX_0_VAL_priority 15
#define DT_N_S_uart_2840000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_uart_2840000_IRQ_IDX_0_CONTROLLER DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2840000_IRQ_LEVEL 1
#define DT_N_S_uart_2840000_COMPAT_MATCHES_ns16550 1
#define DT_N_S_uart_2840000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_uart_2840000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_uart_2840000_P_reg_shift 2
#define DT_N_S_uart_2840000_P_reg_shift_EXISTS 1
#define DT_N_S_uart_2840000_P_io_mapped 0
#define DT_N_S_uart_2840000_P_io_mapped_EXISTS 1
#define DT_N_S_uart_2840000_P_clock_frequency 48000000
#define DT_N_S_uart_2840000_P_clock_frequency_EXISTS 1
#define DT_N_S_uart_2840000_P_hw_flow_control 0
#define DT_N_S_uart_2840000_P_hw_flow_control_EXISTS 1
#define DT_N_S_uart_2840000_P_parity "none"
#define DT_N_S_uart_2840000_P_parity_STRING_UNQUOTED none
#define DT_N_S_uart_2840000_P_parity_STRING_TOKEN none
#define DT_N_S_uart_2840000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_uart_2840000_P_parity_IDX_0 "none"
#define DT_N_S_uart_2840000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_uart_2840000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_uart_2840000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_uart_2840000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2840000, parity, 0)
#define DT_N_S_uart_2840000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2840000, parity, 0)
#define DT_N_S_uart_2840000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2840000, parity, 0, __VA_ARGS__)
#define DT_N_S_uart_2840000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2840000, parity, 0, __VA_ARGS__)
#define DT_N_S_uart_2840000_P_parity_LEN 1
#define DT_N_S_uart_2840000_P_parity_EXISTS 1
#define DT_N_S_uart_2840000_P_status "disabled"
#define DT_N_S_uart_2840000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_uart_2840000_P_status_STRING_TOKEN disabled
#define DT_N_S_uart_2840000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_uart_2840000_P_status_IDX_0 "disabled"
#define DT_N_S_uart_2840000_P_status_IDX_0_EXISTS 1
#define DT_N_S_uart_2840000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_uart_2840000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_uart_2840000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2840000, status, 0)
#define DT_N_S_uart_2840000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2840000, status, 0)
#define DT_N_S_uart_2840000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2840000, status, 0, __VA_ARGS__)
#define DT_N_S_uart_2840000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2840000, status, 0, __VA_ARGS__)
#define DT_N_S_uart_2840000_P_status_LEN 1
#define DT_N_S_uart_2840000_P_status_EXISTS 1
#define DT_N_S_uart_2840000_P_compatible {"ns16550"}
#define DT_N_S_uart_2840000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_uart_2840000_P_compatible_IDX_0 "ns16550"
#define DT_N_S_uart_2840000_P_compatible_IDX_0_STRING_UNQUOTED ns16550
#define DT_N_S_uart_2840000_P_compatible_IDX_0_STRING_TOKEN ns16550
#define DT_N_S_uart_2840000_P_compatible_IDX_0_STRING_UPPER_TOKEN NS16550
#define DT_N_S_uart_2840000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2840000, compatible, 0)
#define DT_N_S_uart_2840000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2840000, compatible, 0)
#define DT_N_S_uart_2840000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2840000, compatible, 0, __VA_ARGS__)
#define DT_N_S_uart_2840000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2840000, compatible, 0, __VA_ARGS__)
#define DT_N_S_uart_2840000_P_compatible_LEN 1
#define DT_N_S_uart_2840000_P_compatible_EXISTS 1
#define DT_N_S_uart_2840000_P_reg {42205184 /* 0x2840000 */, 256 /* 0x100 */}
#define DT_N_S_uart_2840000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_uart_2840000_P_reg_IDX_0 42205184
#define DT_N_S_uart_2840000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_uart_2840000_P_reg_IDX_1 256
#define DT_N_S_uart_2840000_P_reg_EXISTS 1
#define DT_N_S_uart_2840000_P_interrupts {0 /* 0x0 */, 214 /* 0xd6 */, 2 /* 0x2 */, 15 /* 0xf */}
#define DT_N_S_uart_2840000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_uart_2840000_P_interrupts_IDX_0 0
#define DT_N_S_uart_2840000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_uart_2840000_P_interrupts_IDX_1 214
#define DT_N_S_uart_2840000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_uart_2840000_P_interrupts_IDX_2 2
#define DT_N_S_uart_2840000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_uart_2840000_P_interrupts_IDX_3 15
#define DT_N_S_uart_2840000_P_interrupts_EXISTS 1
#define DT_N_S_uart_2840000_P_interrupt_parent DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2840000_P_interrupt_parent_IDX_0 DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2840000_P_interrupt_parent_IDX_0_PH DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2840000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_uart_2840000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2840000, interrupt_parent, 0)
#define DT_N_S_uart_2840000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2840000, interrupt_parent, 0)
#define DT_N_S_uart_2840000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2840000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_uart_2840000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2840000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_uart_2840000_P_interrupt_parent_LEN 1
#define DT_N_S_uart_2840000_P_interrupt_parent_EXISTS 1
#define DT_N_S_uart_2840000_P_zephyr_deferred_init 0
#define DT_N_S_uart_2840000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_uart_2840000_P_wakeup_source 0
#define DT_N_S_uart_2840000_P_wakeup_source_EXISTS 1
#define DT_N_S_uart_2840000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_uart_2840000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /uart@2850000
 *
 * Node identifier: DT_N_S_uart_2850000
 *
 * Binding (compatible = ns16550):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/serial/ns16550.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_uart_2850000_PATH "/uart@2850000"

/* Node's name with unit-address: */
#define DT_N_S_uart_2850000_FULL_NAME "uart@2850000"
#define DT_N_S_uart_2850000_FULL_NAME_UNQUOTED uart@2850000
#define DT_N_S_uart_2850000_FULL_NAME_TOKEN uart_2850000
#define DT_N_S_uart_2850000_FULL_NAME_UPPER_TOKEN UART_2850000

/* Node parent (/) identifier: */
#define DT_N_S_uart_2850000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_uart_2850000_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_uart_2850000_NODELABEL_NUM 1
#define DT_N_S_uart_2850000_FOREACH_NODELABEL(fn) fn(uart5)
#define DT_N_S_uart_2850000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart5, __VA_ARGS__)
#define DT_N_S_uart_2850000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_uart_2850000_CHILD_NUM 0
#define DT_N_S_uart_2850000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_uart_2850000_FOREACH_CHILD(fn) 
#define DT_N_S_uart_2850000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_uart_2850000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_uart_2850000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_uart_2850000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_uart_2850000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_uart_2850000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_uart_2850000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_uart_2850000_HASH tsdVzKRcfiIRbZOMXA8eoDK961v8IdlvxkWuzqoA5nk

/* Node's dependency ordinal: */
#define DT_N_S_uart_2850000_ORD 21
#define DT_N_S_uart_2850000_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_uart_2850000_REQUIRES_ORDS \
	0, /* / */ \
	11, /* /interrupt-controller@7ff0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_uart_2850000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_uart_2850000_EXISTS 1
#define DT_N_INST_6_ns16550  DT_N_S_uart_2850000
#define DT_N_NODELABEL_uart5 DT_N_S_uart_2850000

/* Macros for properties that are special in the specification: */
#define DT_N_S_uart_2850000_REG_NUM 1
#define DT_N_S_uart_2850000_REG_IDX_0_EXISTS 1
#define DT_N_S_uart_2850000_REG_IDX_0_VAL_ADDRESS 42270720 /* 0x2850000 */
#define DT_N_S_uart_2850000_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_uart_2850000_RANGES_NUM 0
#define DT_N_S_uart_2850000_FOREACH_RANGE(fn) 
#define DT_N_S_uart_2850000_IRQ_NUM 1
#define DT_N_S_uart_2850000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2850000_IRQ_IDX_0_VAL_type 0
#define DT_N_S_uart_2850000_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_uart_2850000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2850000_IRQ_IDX_0_VAL_irq 215
#define DT_N_S_uart_2850000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_uart_2850000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2850000_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_uart_2850000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_uart_2850000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2850000_IRQ_IDX_0_VAL_priority 15
#define DT_N_S_uart_2850000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_uart_2850000_IRQ_IDX_0_CONTROLLER DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2850000_IRQ_LEVEL 1
#define DT_N_S_uart_2850000_COMPAT_MATCHES_ns16550 1
#define DT_N_S_uart_2850000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_uart_2850000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_uart_2850000_P_reg_shift 2
#define DT_N_S_uart_2850000_P_reg_shift_EXISTS 1
#define DT_N_S_uart_2850000_P_io_mapped 0
#define DT_N_S_uart_2850000_P_io_mapped_EXISTS 1
#define DT_N_S_uart_2850000_P_clock_frequency 48000000
#define DT_N_S_uart_2850000_P_clock_frequency_EXISTS 1
#define DT_N_S_uart_2850000_P_hw_flow_control 0
#define DT_N_S_uart_2850000_P_hw_flow_control_EXISTS 1
#define DT_N_S_uart_2850000_P_parity "none"
#define DT_N_S_uart_2850000_P_parity_STRING_UNQUOTED none
#define DT_N_S_uart_2850000_P_parity_STRING_TOKEN none
#define DT_N_S_uart_2850000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_uart_2850000_P_parity_IDX_0 "none"
#define DT_N_S_uart_2850000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_uart_2850000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_uart_2850000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_uart_2850000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2850000, parity, 0)
#define DT_N_S_uart_2850000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2850000, parity, 0)
#define DT_N_S_uart_2850000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2850000, parity, 0, __VA_ARGS__)
#define DT_N_S_uart_2850000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2850000, parity, 0, __VA_ARGS__)
#define DT_N_S_uart_2850000_P_parity_LEN 1
#define DT_N_S_uart_2850000_P_parity_EXISTS 1
#define DT_N_S_uart_2850000_P_status "disabled"
#define DT_N_S_uart_2850000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_uart_2850000_P_status_STRING_TOKEN disabled
#define DT_N_S_uart_2850000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_uart_2850000_P_status_IDX_0 "disabled"
#define DT_N_S_uart_2850000_P_status_IDX_0_EXISTS 1
#define DT_N_S_uart_2850000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_uart_2850000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_uart_2850000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2850000, status, 0)
#define DT_N_S_uart_2850000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2850000, status, 0)
#define DT_N_S_uart_2850000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2850000, status, 0, __VA_ARGS__)
#define DT_N_S_uart_2850000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2850000, status, 0, __VA_ARGS__)
#define DT_N_S_uart_2850000_P_status_LEN 1
#define DT_N_S_uart_2850000_P_status_EXISTS 1
#define DT_N_S_uart_2850000_P_compatible {"ns16550"}
#define DT_N_S_uart_2850000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_uart_2850000_P_compatible_IDX_0 "ns16550"
#define DT_N_S_uart_2850000_P_compatible_IDX_0_STRING_UNQUOTED ns16550
#define DT_N_S_uart_2850000_P_compatible_IDX_0_STRING_TOKEN ns16550
#define DT_N_S_uart_2850000_P_compatible_IDX_0_STRING_UPPER_TOKEN NS16550
#define DT_N_S_uart_2850000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2850000, compatible, 0)
#define DT_N_S_uart_2850000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2850000, compatible, 0)
#define DT_N_S_uart_2850000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2850000, compatible, 0, __VA_ARGS__)
#define DT_N_S_uart_2850000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2850000, compatible, 0, __VA_ARGS__)
#define DT_N_S_uart_2850000_P_compatible_LEN 1
#define DT_N_S_uart_2850000_P_compatible_EXISTS 1
#define DT_N_S_uart_2850000_P_reg {42270720 /* 0x2850000 */, 256 /* 0x100 */}
#define DT_N_S_uart_2850000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_uart_2850000_P_reg_IDX_0 42270720
#define DT_N_S_uart_2850000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_uart_2850000_P_reg_IDX_1 256
#define DT_N_S_uart_2850000_P_reg_EXISTS 1
#define DT_N_S_uart_2850000_P_interrupts {0 /* 0x0 */, 215 /* 0xd7 */, 2 /* 0x2 */, 15 /* 0xf */}
#define DT_N_S_uart_2850000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_uart_2850000_P_interrupts_IDX_0 0
#define DT_N_S_uart_2850000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_uart_2850000_P_interrupts_IDX_1 215
#define DT_N_S_uart_2850000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_uart_2850000_P_interrupts_IDX_2 2
#define DT_N_S_uart_2850000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_uart_2850000_P_interrupts_IDX_3 15
#define DT_N_S_uart_2850000_P_interrupts_EXISTS 1
#define DT_N_S_uart_2850000_P_interrupt_parent DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2850000_P_interrupt_parent_IDX_0 DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2850000_P_interrupt_parent_IDX_0_PH DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2850000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_uart_2850000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2850000, interrupt_parent, 0)
#define DT_N_S_uart_2850000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2850000, interrupt_parent, 0)
#define DT_N_S_uart_2850000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2850000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_uart_2850000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2850000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_uart_2850000_P_interrupt_parent_LEN 1
#define DT_N_S_uart_2850000_P_interrupt_parent_EXISTS 1
#define DT_N_S_uart_2850000_P_zephyr_deferred_init 0
#define DT_N_S_uart_2850000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_uart_2850000_P_wakeup_source 0
#define DT_N_S_uart_2850000_P_wakeup_source_EXISTS 1
#define DT_N_S_uart_2850000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_uart_2850000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /uart@2860000
 *
 * Node identifier: DT_N_S_uart_2860000
 *
 * Binding (compatible = ns16550):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/serial/ns16550.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_uart_2860000_PATH "/uart@2860000"

/* Node's name with unit-address: */
#define DT_N_S_uart_2860000_FULL_NAME "uart@2860000"
#define DT_N_S_uart_2860000_FULL_NAME_UNQUOTED uart@2860000
#define DT_N_S_uart_2860000_FULL_NAME_TOKEN uart_2860000
#define DT_N_S_uart_2860000_FULL_NAME_UPPER_TOKEN UART_2860000

/* Node parent (/) identifier: */
#define DT_N_S_uart_2860000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_uart_2860000_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_uart_2860000_NODELABEL_NUM 1
#define DT_N_S_uart_2860000_FOREACH_NODELABEL(fn) fn(uart6)
#define DT_N_S_uart_2860000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart6, __VA_ARGS__)
#define DT_N_S_uart_2860000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_uart_2860000_CHILD_NUM 0
#define DT_N_S_uart_2860000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_uart_2860000_FOREACH_CHILD(fn) 
#define DT_N_S_uart_2860000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_uart_2860000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_uart_2860000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_uart_2860000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_uart_2860000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_uart_2860000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_uart_2860000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_uart_2860000_HASH bYtBE_A6zTM165TghCoY0RUI6vKB_Ql0Q3MPukdKLFU

/* Node's dependency ordinal: */
#define DT_N_S_uart_2860000_ORD 22
#define DT_N_S_uart_2860000_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_uart_2860000_REQUIRES_ORDS \
	0, /* / */ \
	11, /* /interrupt-controller@7ff0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_uart_2860000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_uart_2860000_EXISTS 1
#define DT_N_INST_7_ns16550  DT_N_S_uart_2860000
#define DT_N_NODELABEL_uart6 DT_N_S_uart_2860000

/* Macros for properties that are special in the specification: */
#define DT_N_S_uart_2860000_REG_NUM 1
#define DT_N_S_uart_2860000_REG_IDX_0_EXISTS 1
#define DT_N_S_uart_2860000_REG_IDX_0_VAL_ADDRESS 42336256 /* 0x2860000 */
#define DT_N_S_uart_2860000_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_uart_2860000_RANGES_NUM 0
#define DT_N_S_uart_2860000_FOREACH_RANGE(fn) 
#define DT_N_S_uart_2860000_IRQ_NUM 1
#define DT_N_S_uart_2860000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2860000_IRQ_IDX_0_VAL_type 0
#define DT_N_S_uart_2860000_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_uart_2860000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2860000_IRQ_IDX_0_VAL_irq 216
#define DT_N_S_uart_2860000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_uart_2860000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2860000_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_uart_2860000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_uart_2860000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_2860000_IRQ_IDX_0_VAL_priority 15
#define DT_N_S_uart_2860000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_uart_2860000_IRQ_IDX_0_CONTROLLER DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2860000_IRQ_LEVEL 1
#define DT_N_S_uart_2860000_COMPAT_MATCHES_ns16550 1
#define DT_N_S_uart_2860000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_uart_2860000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_uart_2860000_P_reg_shift 2
#define DT_N_S_uart_2860000_P_reg_shift_EXISTS 1
#define DT_N_S_uart_2860000_P_io_mapped 0
#define DT_N_S_uart_2860000_P_io_mapped_EXISTS 1
#define DT_N_S_uart_2860000_P_clock_frequency 48000000
#define DT_N_S_uart_2860000_P_clock_frequency_EXISTS 1
#define DT_N_S_uart_2860000_P_hw_flow_control 0
#define DT_N_S_uart_2860000_P_hw_flow_control_EXISTS 1
#define DT_N_S_uart_2860000_P_parity "none"
#define DT_N_S_uart_2860000_P_parity_STRING_UNQUOTED none
#define DT_N_S_uart_2860000_P_parity_STRING_TOKEN none
#define DT_N_S_uart_2860000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_uart_2860000_P_parity_IDX_0 "none"
#define DT_N_S_uart_2860000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_uart_2860000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_uart_2860000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_uart_2860000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2860000, parity, 0)
#define DT_N_S_uart_2860000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2860000, parity, 0)
#define DT_N_S_uart_2860000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2860000, parity, 0, __VA_ARGS__)
#define DT_N_S_uart_2860000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2860000, parity, 0, __VA_ARGS__)
#define DT_N_S_uart_2860000_P_parity_LEN 1
#define DT_N_S_uart_2860000_P_parity_EXISTS 1
#define DT_N_S_uart_2860000_P_status "disabled"
#define DT_N_S_uart_2860000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_uart_2860000_P_status_STRING_TOKEN disabled
#define DT_N_S_uart_2860000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_uart_2860000_P_status_IDX_0 "disabled"
#define DT_N_S_uart_2860000_P_status_IDX_0_EXISTS 1
#define DT_N_S_uart_2860000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_uart_2860000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_uart_2860000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2860000, status, 0)
#define DT_N_S_uart_2860000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2860000, status, 0)
#define DT_N_S_uart_2860000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2860000, status, 0, __VA_ARGS__)
#define DT_N_S_uart_2860000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2860000, status, 0, __VA_ARGS__)
#define DT_N_S_uart_2860000_P_status_LEN 1
#define DT_N_S_uart_2860000_P_status_EXISTS 1
#define DT_N_S_uart_2860000_P_compatible {"ns16550"}
#define DT_N_S_uart_2860000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_uart_2860000_P_compatible_IDX_0 "ns16550"
#define DT_N_S_uart_2860000_P_compatible_IDX_0_STRING_UNQUOTED ns16550
#define DT_N_S_uart_2860000_P_compatible_IDX_0_STRING_TOKEN ns16550
#define DT_N_S_uart_2860000_P_compatible_IDX_0_STRING_UPPER_TOKEN NS16550
#define DT_N_S_uart_2860000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2860000, compatible, 0)
#define DT_N_S_uart_2860000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2860000, compatible, 0)
#define DT_N_S_uart_2860000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2860000, compatible, 0, __VA_ARGS__)
#define DT_N_S_uart_2860000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2860000, compatible, 0, __VA_ARGS__)
#define DT_N_S_uart_2860000_P_compatible_LEN 1
#define DT_N_S_uart_2860000_P_compatible_EXISTS 1
#define DT_N_S_uart_2860000_P_reg {42336256 /* 0x2860000 */, 256 /* 0x100 */}
#define DT_N_S_uart_2860000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_uart_2860000_P_reg_IDX_0 42336256
#define DT_N_S_uart_2860000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_uart_2860000_P_reg_IDX_1 256
#define DT_N_S_uart_2860000_P_reg_EXISTS 1
#define DT_N_S_uart_2860000_P_interrupts {0 /* 0x0 */, 216 /* 0xd8 */, 2 /* 0x2 */, 15 /* 0xf */}
#define DT_N_S_uart_2860000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_uart_2860000_P_interrupts_IDX_0 0
#define DT_N_S_uart_2860000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_uart_2860000_P_interrupts_IDX_1 216
#define DT_N_S_uart_2860000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_uart_2860000_P_interrupts_IDX_2 2
#define DT_N_S_uart_2860000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_uart_2860000_P_interrupts_IDX_3 15
#define DT_N_S_uart_2860000_P_interrupts_EXISTS 1
#define DT_N_S_uart_2860000_P_interrupt_parent DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2860000_P_interrupt_parent_IDX_0 DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2860000_P_interrupt_parent_IDX_0_PH DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_2860000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_uart_2860000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_2860000, interrupt_parent, 0)
#define DT_N_S_uart_2860000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_2860000, interrupt_parent, 0)
#define DT_N_S_uart_2860000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_2860000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_uart_2860000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_2860000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_uart_2860000_P_interrupt_parent_LEN 1
#define DT_N_S_uart_2860000_P_interrupt_parent_EXISTS 1
#define DT_N_S_uart_2860000_P_zephyr_deferred_init 0
#define DT_N_S_uart_2860000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_uart_2860000_P_wakeup_source 0
#define DT_N_S_uart_2860000_P_wakeup_source_EXISTS 1
#define DT_N_S_uart_2860000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_uart_2860000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /uart@4a00000
 *
 * Node identifier: DT_N_S_uart_4a00000
 *
 * Binding (compatible = ns16550):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/serial/ns16550.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_uart_4a00000_PATH "/uart@4a00000"

/* Node's name with unit-address: */
#define DT_N_S_uart_4a00000_FULL_NAME "uart@4a00000"
#define DT_N_S_uart_4a00000_FULL_NAME_UNQUOTED uart@4a00000
#define DT_N_S_uart_4a00000_FULL_NAME_TOKEN uart_4a00000
#define DT_N_S_uart_4a00000_FULL_NAME_UPPER_TOKEN UART_4A00000

/* Node parent (/) identifier: */
#define DT_N_S_uart_4a00000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_uart_4a00000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_uart_4a00000_NODELABEL_NUM 1
#define DT_N_S_uart_4a00000_FOREACH_NODELABEL(fn) fn(mcu_uart0)
#define DT_N_S_uart_4a00000_FOREACH_NODELABEL_VARGS(fn, ...) fn(mcu_uart0, __VA_ARGS__)
#define DT_N_S_uart_4a00000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_uart_4a00000_CHILD_NUM 0
#define DT_N_S_uart_4a00000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_uart_4a00000_FOREACH_CHILD(fn) 
#define DT_N_S_uart_4a00000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_uart_4a00000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_uart_4a00000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_uart_4a00000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_uart_4a00000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_uart_4a00000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_uart_4a00000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_uart_4a00000_HASH 8nL_S4DFamNXRnVYmEXtCVEIovYCivTUo_Cm3ZSC2U8

/* Node's dependency ordinal: */
#define DT_N_S_uart_4a00000_ORD 23
#define DT_N_S_uart_4a00000_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_uart_4a00000_REQUIRES_ORDS \
	0, /* / */ \
	11, /* /interrupt-controller@7ff0000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_uart_4a00000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_uart_4a00000_EXISTS 1
#define DT_N_INST_1_ns16550      DT_N_S_uart_4a00000
#define DT_N_NODELABEL_mcu_uart0 DT_N_S_uart_4a00000

/* Macros for properties that are special in the specification: */
#define DT_N_S_uart_4a00000_REG_NUM 1
#define DT_N_S_uart_4a00000_REG_IDX_0_EXISTS 1
#define DT_N_S_uart_4a00000_REG_IDX_0_VAL_ADDRESS 77594624 /* 0x4a00000 */
#define DT_N_S_uart_4a00000_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_uart_4a00000_RANGES_NUM 0
#define DT_N_S_uart_4a00000_FOREACH_RANGE(fn) 
#define DT_N_S_uart_4a00000_IRQ_NUM 1
#define DT_N_S_uart_4a00000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_4a00000_IRQ_IDX_0_VAL_type 0
#define DT_N_S_uart_4a00000_IRQ_IDX_0_VAL_type_EXISTS 1
#define DT_N_S_uart_4a00000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_4a00000_IRQ_IDX_0_VAL_irq 217
#define DT_N_S_uart_4a00000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_uart_4a00000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_4a00000_IRQ_IDX_0_VAL_flags 2
#define DT_N_S_uart_4a00000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_uart_4a00000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_uart_4a00000_IRQ_IDX_0_VAL_priority 15
#define DT_N_S_uart_4a00000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_uart_4a00000_IRQ_IDX_0_CONTROLLER DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_4a00000_IRQ_LEVEL 1
#define DT_N_S_uart_4a00000_COMPAT_MATCHES_ns16550 1
#define DT_N_S_uart_4a00000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_uart_4a00000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_uart_4a00000_P_reg_shift 2
#define DT_N_S_uart_4a00000_P_reg_shift_EXISTS 1
#define DT_N_S_uart_4a00000_P_io_mapped 0
#define DT_N_S_uart_4a00000_P_io_mapped_EXISTS 1
#define DT_N_S_uart_4a00000_P_clock_frequency 48000000
#define DT_N_S_uart_4a00000_P_clock_frequency_EXISTS 1
#define DT_N_S_uart_4a00000_P_hw_flow_control 0
#define DT_N_S_uart_4a00000_P_hw_flow_control_EXISTS 1
#define DT_N_S_uart_4a00000_P_parity "none"
#define DT_N_S_uart_4a00000_P_parity_STRING_UNQUOTED none
#define DT_N_S_uart_4a00000_P_parity_STRING_TOKEN none
#define DT_N_S_uart_4a00000_P_parity_STRING_UPPER_TOKEN NONE
#define DT_N_S_uart_4a00000_P_parity_IDX_0 "none"
#define DT_N_S_uart_4a00000_P_parity_IDX_0_EXISTS 1
#define DT_N_S_uart_4a00000_P_parity_IDX_0_ENUM_IDX 0
#define DT_N_S_uart_4a00000_P_parity_IDX_0_ENUM_VAL_none_EXISTS 1
#define DT_N_S_uart_4a00000_P_parity_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_4a00000, parity, 0)
#define DT_N_S_uart_4a00000_P_parity_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_4a00000, parity, 0)
#define DT_N_S_uart_4a00000_P_parity_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_4a00000, parity, 0, __VA_ARGS__)
#define DT_N_S_uart_4a00000_P_parity_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_4a00000, parity, 0, __VA_ARGS__)
#define DT_N_S_uart_4a00000_P_parity_LEN 1
#define DT_N_S_uart_4a00000_P_parity_EXISTS 1
#define DT_N_S_uart_4a00000_P_status "disabled"
#define DT_N_S_uart_4a00000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_uart_4a00000_P_status_STRING_TOKEN disabled
#define DT_N_S_uart_4a00000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_uart_4a00000_P_status_IDX_0 "disabled"
#define DT_N_S_uart_4a00000_P_status_IDX_0_EXISTS 1
#define DT_N_S_uart_4a00000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_uart_4a00000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_uart_4a00000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_4a00000, status, 0)
#define DT_N_S_uart_4a00000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_4a00000, status, 0)
#define DT_N_S_uart_4a00000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_4a00000, status, 0, __VA_ARGS__)
#define DT_N_S_uart_4a00000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_4a00000, status, 0, __VA_ARGS__)
#define DT_N_S_uart_4a00000_P_status_LEN 1
#define DT_N_S_uart_4a00000_P_status_EXISTS 1
#define DT_N_S_uart_4a00000_P_compatible {"ns16550"}
#define DT_N_S_uart_4a00000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_uart_4a00000_P_compatible_IDX_0 "ns16550"
#define DT_N_S_uart_4a00000_P_compatible_IDX_0_STRING_UNQUOTED ns16550
#define DT_N_S_uart_4a00000_P_compatible_IDX_0_STRING_TOKEN ns16550
#define DT_N_S_uart_4a00000_P_compatible_IDX_0_STRING_UPPER_TOKEN NS16550
#define DT_N_S_uart_4a00000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_4a00000, compatible, 0)
#define DT_N_S_uart_4a00000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_4a00000, compatible, 0)
#define DT_N_S_uart_4a00000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_4a00000, compatible, 0, __VA_ARGS__)
#define DT_N_S_uart_4a00000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_4a00000, compatible, 0, __VA_ARGS__)
#define DT_N_S_uart_4a00000_P_compatible_LEN 1
#define DT_N_S_uart_4a00000_P_compatible_EXISTS 1
#define DT_N_S_uart_4a00000_P_reg {77594624 /* 0x4a00000 */, 256 /* 0x100 */}
#define DT_N_S_uart_4a00000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_uart_4a00000_P_reg_IDX_0 77594624
#define DT_N_S_uart_4a00000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_uart_4a00000_P_reg_IDX_1 256
#define DT_N_S_uart_4a00000_P_reg_EXISTS 1
#define DT_N_S_uart_4a00000_P_interrupts {0 /* 0x0 */, 217 /* 0xd9 */, 2 /* 0x2 */, 15 /* 0xf */}
#define DT_N_S_uart_4a00000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_uart_4a00000_P_interrupts_IDX_0 0
#define DT_N_S_uart_4a00000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_uart_4a00000_P_interrupts_IDX_1 217
#define DT_N_S_uart_4a00000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_uart_4a00000_P_interrupts_IDX_2 2
#define DT_N_S_uart_4a00000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_uart_4a00000_P_interrupts_IDX_3 15
#define DT_N_S_uart_4a00000_P_interrupts_EXISTS 1
#define DT_N_S_uart_4a00000_P_interrupt_parent DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_4a00000_P_interrupt_parent_IDX_0 DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_4a00000_P_interrupt_parent_IDX_0_PH DT_N_S_interrupt_controller_7ff0000
#define DT_N_S_uart_4a00000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_uart_4a00000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_uart_4a00000, interrupt_parent, 0)
#define DT_N_S_uart_4a00000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_uart_4a00000, interrupt_parent, 0)
#define DT_N_S_uart_4a00000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_uart_4a00000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_uart_4a00000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_uart_4a00000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_uart_4a00000_P_interrupt_parent_LEN 1
#define DT_N_S_uart_4a00000_P_interrupt_parent_EXISTS 1
#define DT_N_S_uart_4a00000_P_zephyr_deferred_init 0
#define DT_N_S_uart_4a00000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_uart_4a00000_P_wakeup_source 0
#define DT_N_S_uart_4a00000_P_wakeup_source_EXISTS 1
#define DT_N_S_uart_4a00000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_uart_4a00000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"
#define DT_N_S_cpus_FULL_NAME_UNQUOTED cpus
#define DT_N_S_cpus_FULL_NAME_TOKEN cpus
#define DT_N_S_cpus_FULL_NAME_UPPER_TOKEN CPUS

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_NODELABEL_NUM 0
#define DT_N_S_cpus_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_cpus_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_CHILD_NUM 1
#define DT_N_S_cpus_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_cpus_HASH iL3XRGZVvvtpNJqKV0_jvtuXF7m6kgky4nI2ifizwdg

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 24
#define DT_N_S_cpus_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	25, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_IRQ_LEVEL 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-r5):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/cpu/arm,cortex-r5.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UNQUOTED cpu@0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_TOKEN cpu_0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UPPER_TOKEN CPU_0

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_0_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL(fn) fn(cpu0)
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(cpu0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_cpus_S_cpu_0_HASH Su0JBbOtM0QIxe_1ka2Xvgw4rk1QaIlMIj8Rp_v4yVQ

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 25
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	24, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_r5 DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0       DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_r5 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-r5"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_status "okay"
#define DT_N_S_cpus_S_cpu_0_P_status_STRING_UNQUOTED okay
#define DT_N_S_cpus_S_cpu_0_P_status_STRING_TOKEN okay
#define DT_N_S_cpus_S_cpu_0_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_cpus_S_cpu_0_P_status_IDX_0 "okay"
#define DT_N_S_cpus_S_cpu_0_P_status_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_cpus_S_cpu_0_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, status, 0)
#define DT_N_S_cpus_S_cpu_0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, status, 0)
#define DT_N_S_cpus_S_cpu_0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, status, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, status, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_status_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_status_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-r5"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-r5"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-r5
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_r5
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_R5
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pinctrl_mcu@4084000
 *
 * Node identifier: DT_N_S_pinctrl_mcu_4084000
 *
 * Binding (compatible = ti,k3-pinctrl):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/pinctrl/ti,k3-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pinctrl_mcu_4084000_PATH "/pinctrl_mcu@4084000"

/* Node's name with unit-address: */
#define DT_N_S_pinctrl_mcu_4084000_FULL_NAME "pinctrl_mcu@4084000"
#define DT_N_S_pinctrl_mcu_4084000_FULL_NAME_UNQUOTED pinctrl_mcu@4084000
#define DT_N_S_pinctrl_mcu_4084000_FULL_NAME_TOKEN pinctrl_mcu_4084000
#define DT_N_S_pinctrl_mcu_4084000_FULL_NAME_UPPER_TOKEN PINCTRL_MCU_4084000

/* Node parent (/) identifier: */
#define DT_N_S_pinctrl_mcu_4084000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_pinctrl_mcu_4084000_CHILD_IDX 24

/* Helpers for dealing with node labels: */
#define DT_N_S_pinctrl_mcu_4084000_NODELABEL_NUM 1
#define DT_N_S_pinctrl_mcu_4084000_FOREACH_NODELABEL(fn) fn(pinctrl_mcu)
#define DT_N_S_pinctrl_mcu_4084000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinctrl_mcu, __VA_ARGS__)
#define DT_N_S_pinctrl_mcu_4084000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pinctrl_mcu_4084000_CHILD_NUM 1
#define DT_N_S_pinctrl_mcu_4084000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pinctrl_mcu_4084000_FOREACH_CHILD(fn) fn(DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default)
#define DT_N_S_pinctrl_mcu_4084000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default)
#define DT_N_S_pinctrl_mcu_4084000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default, __VA_ARGS__)
#define DT_N_S_pinctrl_mcu_4084000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default, __VA_ARGS__)
#define DT_N_S_pinctrl_mcu_4084000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default)
#define DT_N_S_pinctrl_mcu_4084000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default)
#define DT_N_S_pinctrl_mcu_4084000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default, __VA_ARGS__)
#define DT_N_S_pinctrl_mcu_4084000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_pinctrl_mcu_4084000_HASH 4Uevv2wbdCzj7IFqPAn6mhVaboJB1weQbyOoL5qIrS0

/* Node's dependency ordinal: */
#define DT_N_S_pinctrl_mcu_4084000_ORD 26
#define DT_N_S_pinctrl_mcu_4084000_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pinctrl_mcu_4084000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pinctrl_mcu_4084000_SUPPORTS_ORDS \
	27, /* /pinctrl_mcu@4084000/mcu_gpio0_led_btn_default */

/* Existence and alternate IDs: */
#define DT_N_S_pinctrl_mcu_4084000_EXISTS 1
#define DT_N_INST_1_ti_k3_pinctrl  DT_N_S_pinctrl_mcu_4084000
#define DT_N_NODELABEL_pinctrl_mcu DT_N_S_pinctrl_mcu_4084000

/* Macros for properties that are special in the specification: */
#define DT_N_S_pinctrl_mcu_4084000_REG_NUM 1
#define DT_N_S_pinctrl_mcu_4084000_REG_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_mcu_4084000_REG_IDX_0_VAL_ADDRESS 67649536 /* 0x4084000 */
#define DT_N_S_pinctrl_mcu_4084000_REG_IDX_0_VAL_SIZE 136 /* 0x88 */
#define DT_N_S_pinctrl_mcu_4084000_RANGES_NUM 0
#define DT_N_S_pinctrl_mcu_4084000_FOREACH_RANGE(fn) 
#define DT_N_S_pinctrl_mcu_4084000_IRQ_NUM 0
#define DT_N_S_pinctrl_mcu_4084000_IRQ_LEVEL 0
#define DT_N_S_pinctrl_mcu_4084000_COMPAT_MATCHES_ti_k3_pinctrl 1
#define DT_N_S_pinctrl_mcu_4084000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_mcu_4084000_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_pinctrl_mcu_4084000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_mcu_4084000_COMPAT_MODEL_IDX_0 "k3-pinctrl"
#define DT_N_S_pinctrl_mcu_4084000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pinctrl_mcu_4084000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pinctrl_mcu_4084000_P_reg {67649536 /* 0x4084000 */, 136 /* 0x88 */}
#define DT_N_S_pinctrl_mcu_4084000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_mcu_4084000_P_reg_IDX_0 67649536
#define DT_N_S_pinctrl_mcu_4084000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_pinctrl_mcu_4084000_P_reg_IDX_1 136
#define DT_N_S_pinctrl_mcu_4084000_P_reg_EXISTS 1
#define DT_N_S_pinctrl_mcu_4084000_P_status "okay"
#define DT_N_S_pinctrl_mcu_4084000_P_status_STRING_UNQUOTED okay
#define DT_N_S_pinctrl_mcu_4084000_P_status_STRING_TOKEN okay
#define DT_N_S_pinctrl_mcu_4084000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_pinctrl_mcu_4084000_P_status_IDX_0 "okay"
#define DT_N_S_pinctrl_mcu_4084000_P_status_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_mcu_4084000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_pinctrl_mcu_4084000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_pinctrl_mcu_4084000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_mcu_4084000, status, 0)
#define DT_N_S_pinctrl_mcu_4084000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_mcu_4084000, status, 0)
#define DT_N_S_pinctrl_mcu_4084000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_mcu_4084000, status, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_mcu_4084000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_mcu_4084000, status, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_mcu_4084000_P_status_LEN 1
#define DT_N_S_pinctrl_mcu_4084000_P_status_EXISTS 1
#define DT_N_S_pinctrl_mcu_4084000_P_compatible {"ti,k3-pinctrl"}
#define DT_N_S_pinctrl_mcu_4084000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_mcu_4084000_P_compatible_IDX_0 "ti,k3-pinctrl"
#define DT_N_S_pinctrl_mcu_4084000_P_compatible_IDX_0_STRING_UNQUOTED ti,k3-pinctrl
#define DT_N_S_pinctrl_mcu_4084000_P_compatible_IDX_0_STRING_TOKEN ti_k3_pinctrl
#define DT_N_S_pinctrl_mcu_4084000_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_K3_PINCTRL
#define DT_N_S_pinctrl_mcu_4084000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_mcu_4084000, compatible, 0)
#define DT_N_S_pinctrl_mcu_4084000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_mcu_4084000, compatible, 0)
#define DT_N_S_pinctrl_mcu_4084000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_mcu_4084000, compatible, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_mcu_4084000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_mcu_4084000, compatible, 0, __VA_ARGS__)
#define DT_N_S_pinctrl_mcu_4084000_P_compatible_LEN 1
#define DT_N_S_pinctrl_mcu_4084000_P_compatible_EXISTS 1
#define DT_N_S_pinctrl_mcu_4084000_P_zephyr_deferred_init 0
#define DT_N_S_pinctrl_mcu_4084000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_pinctrl_mcu_4084000_P_wakeup_source 0
#define DT_N_S_pinctrl_mcu_4084000_P_wakeup_source_EXISTS 1
#define DT_N_S_pinctrl_mcu_4084000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_pinctrl_mcu_4084000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pinctrl_mcu@4084000/mcu_gpio0_led_btn_default
 *
 * Node identifier: DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_PATH "/pinctrl_mcu@4084000/mcu_gpio0_led_btn_default"

/* Node's name with unit-address: */
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_FULL_NAME "mcu_gpio0_led_btn_default"
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_FULL_NAME_UNQUOTED mcu_gpio0_led_btn_default
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_FULL_NAME_TOKEN mcu_gpio0_led_btn_default
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_FULL_NAME_UPPER_TOKEN MCU_GPIO0_LED_BTN_DEFAULT

/* Node parent (/pinctrl_mcu@4084000) identifier: */
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_PARENT DT_N_S_pinctrl_mcu_4084000

/* Node's index in its parent's list of children: */
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_NODELABEL_NUM 1
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_FOREACH_NODELABEL(fn) fn(mcu_gpio0_led_btn_default)
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(mcu_gpio0_led_btn_default, __VA_ARGS__)
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_pinctrl_mcu_4084000) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_CHILD_NUM 0
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_FOREACH_CHILD(fn) 
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_HASH oDEAGXaCJSJbLRvrYAR0M3EfH6BbtWESNUobUPaGmK0

/* Node's dependency ordinal: */
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_ORD 27
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_REQUIRES_ORDS \
	26, /* /pinctrl_mcu@4084000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_SUPPORTS_ORDS \
	28, /* /gpio@4201010 */

/* Existence and alternate IDs: */
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_EXISTS 1
#define DT_N_NODELABEL_mcu_gpio0_led_btn_default DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_REG_NUM 0
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_RANGES_NUM 0
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_FOREACH_RANGE(fn) 
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_IRQ_NUM 0
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_IRQ_LEVEL 0
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_P_pinmux {28 /* 0x1c */, 65543 /* 0x10007 */}
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_P_pinmux_IDX_0 28
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_P_pinmux_IDX_1 65543
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default, pinmux, 0) \
	fn(DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default, pinmux, 1)
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default, pinmux, 1)
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_P_pinmux_LEN 2
#define DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default_P_pinmux_EXISTS 1

/*
 * Devicetree node: /gpio@4201010
 *
 * Node identifier: DT_N_S_gpio_4201010
 *
 * Binding (compatible = ti,davinci-gpio):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/gpio/ti,davinci-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_4201010_PATH "/gpio@4201010"

/* Node's name with unit-address: */
#define DT_N_S_gpio_4201010_FULL_NAME "gpio@4201010"
#define DT_N_S_gpio_4201010_FULL_NAME_UNQUOTED gpio@4201010
#define DT_N_S_gpio_4201010_FULL_NAME_TOKEN gpio_4201010
#define DT_N_S_gpio_4201010_FULL_NAME_UPPER_TOKEN GPIO_4201010

/* Node parent (/) identifier: */
#define DT_N_S_gpio_4201010_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_4201010_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio_4201010_NODELABEL_NUM 1
#define DT_N_S_gpio_4201010_FOREACH_NODELABEL(fn) fn(mcu_gpio0)
#define DT_N_S_gpio_4201010_FOREACH_NODELABEL_VARGS(fn, ...) fn(mcu_gpio0, __VA_ARGS__)
#define DT_N_S_gpio_4201010_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio_4201010_CHILD_NUM 0
#define DT_N_S_gpio_4201010_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_gpio_4201010_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_4201010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio_4201010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_4201010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio_4201010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_4201010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio_4201010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio_4201010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_gpio_4201010_HASH zMIqAo5LfXXbwyM_pObhmyNsGup4Ok9H8fkcPIs_5O0

/* Node's dependency ordinal: */
#define DT_N_S_gpio_4201010_ORD 28
#define DT_N_S_gpio_4201010_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_4201010_REQUIRES_ORDS \
	0, /* / */ \
	27, /* /pinctrl_mcu@4084000/mcu_gpio0_led_btn_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_4201010_SUPPORTS_ORDS \
	29, /* /leds */ \
	30, /* /leds/btn_gpio23 */ \
	31, /* /leds/btn_gpio24 */ \
	32, /* /leds/led_gpio7 */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_4201010_EXISTS 1
#define DT_N_INST_0_ti_davinci_gpio DT_N_S_gpio_4201010
#define DT_N_NODELABEL_mcu_gpio0    DT_N_S_gpio_4201010

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_4201010_REG_NUM 1
#define DT_N_S_gpio_4201010_REG_IDX_0_EXISTS 1
#define DT_N_S_gpio_4201010_REG_IDX_0_VAL_ADDRESS 69210128 /* 0x4201010 */
#define DT_N_S_gpio_4201010_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_gpio_4201010_RANGES_NUM 0
#define DT_N_S_gpio_4201010_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_4201010_IRQ_NUM 0
#define DT_N_S_gpio_4201010_IRQ_LEVEL 0
#define DT_N_S_gpio_4201010_COMPAT_MATCHES_ti_davinci_gpio 1
#define DT_N_S_gpio_4201010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_gpio_4201010_COMPAT_VENDOR_IDX_0 "Texas Instruments"
#define DT_N_S_gpio_4201010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_gpio_4201010_COMPAT_MODEL_IDX_0 "davinci-gpio"
#define DT_N_S_gpio_4201010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_4201010_PINCTRL_NUM 1
#define DT_N_S_gpio_4201010_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_gpio_4201010_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_gpio_4201010_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_gpio_4201010_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_gpio_4201010_PINCTRL_NAME_default_IDX 0
#define DT_N_S_gpio_4201010_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default

/* Generic property macros: */
#define DT_N_S_gpio_4201010_P_reg {69210128 /* 0x4201010 */, 256 /* 0x100 */}
#define DT_N_S_gpio_4201010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_gpio_4201010_P_reg_IDX_0 69210128
#define DT_N_S_gpio_4201010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_gpio_4201010_P_reg_IDX_1 256
#define DT_N_S_gpio_4201010_P_reg_EXISTS 1
#define DT_N_S_gpio_4201010_P_status "okay"
#define DT_N_S_gpio_4201010_P_status_STRING_UNQUOTED okay
#define DT_N_S_gpio_4201010_P_status_STRING_TOKEN okay
#define DT_N_S_gpio_4201010_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_gpio_4201010_P_status_IDX_0 "okay"
#define DT_N_S_gpio_4201010_P_status_IDX_0_EXISTS 1
#define DT_N_S_gpio_4201010_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_gpio_4201010_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_gpio_4201010_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_4201010, status, 0)
#define DT_N_S_gpio_4201010_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_4201010, status, 0)
#define DT_N_S_gpio_4201010_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_4201010, status, 0, __VA_ARGS__)
#define DT_N_S_gpio_4201010_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_4201010, status, 0, __VA_ARGS__)
#define DT_N_S_gpio_4201010_P_status_LEN 1
#define DT_N_S_gpio_4201010_P_status_EXISTS 1
#define DT_N_S_gpio_4201010_P_compatible {"ti,davinci-gpio"}
#define DT_N_S_gpio_4201010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_4201010_P_compatible_IDX_0 "ti,davinci-gpio"
#define DT_N_S_gpio_4201010_P_compatible_IDX_0_STRING_UNQUOTED ti,davinci-gpio
#define DT_N_S_gpio_4201010_P_compatible_IDX_0_STRING_TOKEN ti_davinci_gpio
#define DT_N_S_gpio_4201010_P_compatible_IDX_0_STRING_UPPER_TOKEN TI_DAVINCI_GPIO
#define DT_N_S_gpio_4201010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_4201010, compatible, 0)
#define DT_N_S_gpio_4201010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_4201010, compatible, 0)
#define DT_N_S_gpio_4201010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_4201010, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_4201010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_4201010, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_4201010_P_compatible_LEN 1
#define DT_N_S_gpio_4201010_P_compatible_EXISTS 1
#define DT_N_S_gpio_4201010_P_zephyr_deferred_init 0
#define DT_N_S_gpio_4201010_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_gpio_4201010_P_wakeup_source 0
#define DT_N_S_gpio_4201010_P_wakeup_source_EXISTS 1
#define DT_N_S_gpio_4201010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_gpio_4201010_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_gpio_4201010_P_gpio_controller 1
#define DT_N_S_gpio_4201010_P_gpio_controller_EXISTS 1
#define DT_N_S_gpio_4201010_P_ngpios 24
#define DT_N_S_gpio_4201010_P_ngpios_EXISTS 1
#define DT_N_S_gpio_4201010_P_pinctrl_0_IDX_0 DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default
#define DT_N_S_gpio_4201010_P_pinctrl_0_IDX_0_PH DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default
#define DT_N_S_gpio_4201010_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_gpio_4201010_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_4201010, pinctrl_0, 0)
#define DT_N_S_gpio_4201010_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_4201010, pinctrl_0, 0)
#define DT_N_S_gpio_4201010_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_4201010, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_gpio_4201010_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_4201010, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_gpio_4201010_P_pinctrl_0_LEN 1
#define DT_N_S_gpio_4201010_P_pinctrl_0_EXISTS 1
#define DT_N_S_gpio_4201010_P_pinctrl_names {"default"}
#define DT_N_S_gpio_4201010_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_gpio_4201010_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_gpio_4201010_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_gpio_4201010_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_gpio_4201010_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_gpio_4201010_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_4201010, pinctrl_names, 0)
#define DT_N_S_gpio_4201010_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio_4201010, pinctrl_names, 0)
#define DT_N_S_gpio_4201010_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_4201010, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_gpio_4201010_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio_4201010, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_gpio_4201010_P_pinctrl_names_LEN 1
#define DT_N_S_gpio_4201010_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   /home/junpinfoo/zephyrproject/zephyr/dts/bindings/led/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"
#define DT_N_S_leds_FULL_NAME_UNQUOTED leds
#define DT_N_S_leds_FULL_NAME_TOKEN leds
#define DT_N_S_leds_FULL_NAME_UPPER_TOKEN LEDS

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 23

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_NODELABEL_NUM 0
#define DT_N_S_leds_FOREACH_NODELABEL(fn) 
#define DT_N_S_leds_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_leds_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_CHILD_NUM 3
#define DT_N_S_leds_CHILD_NUM_STATUS_OKAY 3
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_gpio7) fn(DT_N_S_leds_S_btn_gpio24) fn(DT_N_S_leds_S_btn_gpio23)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_gpio7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_btn_gpio24) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_btn_gpio23)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_gpio7, __VA_ARGS__) fn(DT_N_S_leds_S_btn_gpio24, __VA_ARGS__) fn(DT_N_S_leds_S_btn_gpio23, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_gpio7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_btn_gpio24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_btn_gpio23, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_gpio7) fn(DT_N_S_leds_S_btn_gpio24) fn(DT_N_S_leds_S_btn_gpio23)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_gpio7) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_btn_gpio24) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_btn_gpio23)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_gpio7, __VA_ARGS__) fn(DT_N_S_leds_S_btn_gpio24, __VA_ARGS__) fn(DT_N_S_leds_S_btn_gpio23, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_gpio7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_btn_gpio24, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_btn_gpio23, __VA_ARGS__)

/* Node's hash: */
#define DT_N_S_leds_HASH bMroFUocDdjE3kJ38dK18mDvlCOPoyya5kIIs76irj8

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 29
#define DT_N_S_leds_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */ \
	28, /* /gpio@4201010 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	30, /* /leds/btn_gpio23 */ \
	31, /* /leds/btn_gpio24 */ \
	32, /* /leds/led_gpio7 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_IRQ_LEVEL 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/btn_gpio23
 *
 * Node identifier: DT_N_S_leds_S_btn_gpio23
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_btn_gpio23_PATH "/leds/btn_gpio23"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_btn_gpio23_FULL_NAME "btn_gpio23"
#define DT_N_S_leds_S_btn_gpio23_FULL_NAME_UNQUOTED btn_gpio23
#define DT_N_S_leds_S_btn_gpio23_FULL_NAME_TOKEN btn_gpio23
#define DT_N_S_leds_S_btn_gpio23_FULL_NAME_UPPER_TOKEN BTN_GPIO23

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_btn_gpio23_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_btn_gpio23_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_btn_gpio23_NODELABEL_NUM 1
#define DT_N_S_leds_S_btn_gpio23_FOREACH_NODELABEL(fn) fn(mcu_neopixel)
#define DT_N_S_leds_S_btn_gpio23_FOREACH_NODELABEL_VARGS(fn, ...) fn(mcu_neopixel, __VA_ARGS__)
#define DT_N_S_leds_S_btn_gpio23_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_btn_gpio23_CHILD_NUM 0
#define DT_N_S_leds_S_btn_gpio23_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_btn_gpio23_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_btn_gpio23_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_btn_gpio23_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_btn_gpio23_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_btn_gpio23_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_btn_gpio23_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_btn_gpio23_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_btn_gpio23_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_btn_gpio23_HASH Y5qfC_zHYFRxtYO_2wULaEhb_AgW6PWHllGc1AU_Zgc

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_btn_gpio23_ORD 30
#define DT_N_S_leds_S_btn_gpio23_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_btn_gpio23_REQUIRES_ORDS \
	28, /* /gpio@4201010 */ \
	29, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_btn_gpio23_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_btn_gpio23_EXISTS 1
#define DT_N_ALIAS_neopixel         DT_N_S_leds_S_btn_gpio23
#define DT_N_NODELABEL_mcu_neopixel DT_N_S_leds_S_btn_gpio23

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_btn_gpio23_REG_NUM 0
#define DT_N_S_leds_S_btn_gpio23_RANGES_NUM 0
#define DT_N_S_leds_S_btn_gpio23_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_btn_gpio23_IRQ_NUM 0
#define DT_N_S_leds_S_btn_gpio23_IRQ_LEVEL 0
#define DT_N_S_leds_S_btn_gpio23_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_btn_gpio23_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_btn_gpio23_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_btn_gpio23_P_gpios_IDX_0_PH DT_N_S_gpio_4201010
#define DT_N_S_leds_S_btn_gpio23_P_gpios_IDX_0_VAL_pin 7
#define DT_N_S_leds_S_btn_gpio23_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_btn_gpio23_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_btn_gpio23_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_btn_gpio23_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_btn_gpio23, gpios, 0)
#define DT_N_S_leds_S_btn_gpio23_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_btn_gpio23, gpios, 0)
#define DT_N_S_leds_S_btn_gpio23_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_btn_gpio23, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_btn_gpio23_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_btn_gpio23, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_btn_gpio23_P_gpios_LEN 1
#define DT_N_S_leds_S_btn_gpio23_P_gpios_EXISTS 1

/*
 * Devicetree node: /leds/btn_gpio24
 *
 * Node identifier: DT_N_S_leds_S_btn_gpio24
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_btn_gpio24_PATH "/leds/btn_gpio24"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_btn_gpio24_FULL_NAME "btn_gpio24"
#define DT_N_S_leds_S_btn_gpio24_FULL_NAME_UNQUOTED btn_gpio24
#define DT_N_S_leds_S_btn_gpio24_FULL_NAME_TOKEN btn_gpio24
#define DT_N_S_leds_S_btn_gpio24_FULL_NAME_UPPER_TOKEN BTN_GPIO24

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_btn_gpio24_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_btn_gpio24_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_btn_gpio24_NODELABEL_NUM 1
#define DT_N_S_leds_S_btn_gpio24_FOREACH_NODELABEL(fn) fn(mcu_btn)
#define DT_N_S_leds_S_btn_gpio24_FOREACH_NODELABEL_VARGS(fn, ...) fn(mcu_btn, __VA_ARGS__)
#define DT_N_S_leds_S_btn_gpio24_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_btn_gpio24_CHILD_NUM 0
#define DT_N_S_leds_S_btn_gpio24_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_btn_gpio24_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_btn_gpio24_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_btn_gpio24_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_btn_gpio24_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_btn_gpio24_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_btn_gpio24_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_btn_gpio24_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_btn_gpio24_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_btn_gpio24_HASH buzmRzTfFwe20IPuJyQUhz5g5NV5_8U1N3ducAcjKCU

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_btn_gpio24_ORD 31
#define DT_N_S_leds_S_btn_gpio24_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_btn_gpio24_REQUIRES_ORDS \
	28, /* /gpio@4201010 */ \
	29, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_btn_gpio24_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_btn_gpio24_EXISTS 1
#define DT_N_ALIAS_btn0        DT_N_S_leds_S_btn_gpio24
#define DT_N_NODELABEL_mcu_btn DT_N_S_leds_S_btn_gpio24

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_btn_gpio24_REG_NUM 0
#define DT_N_S_leds_S_btn_gpio24_RANGES_NUM 0
#define DT_N_S_leds_S_btn_gpio24_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_btn_gpio24_IRQ_NUM 0
#define DT_N_S_leds_S_btn_gpio24_IRQ_LEVEL 0
#define DT_N_S_leds_S_btn_gpio24_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_btn_gpio24_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_btn_gpio24_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_btn_gpio24_P_gpios_IDX_0_PH DT_N_S_gpio_4201010
#define DT_N_S_leds_S_btn_gpio24_P_gpios_IDX_0_VAL_pin 10
#define DT_N_S_leds_S_btn_gpio24_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_btn_gpio24_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_btn_gpio24_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_btn_gpio24_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_btn_gpio24, gpios, 0)
#define DT_N_S_leds_S_btn_gpio24_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_btn_gpio24, gpios, 0)
#define DT_N_S_leds_S_btn_gpio24_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_btn_gpio24, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_btn_gpio24_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_btn_gpio24, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_btn_gpio24_P_gpios_LEN 1
#define DT_N_S_leds_S_btn_gpio24_P_gpios_EXISTS 1

/*
 * Devicetree node: /leds/led_gpio7
 *
 * Node identifier: DT_N_S_leds_S_led_gpio7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_gpio7_PATH "/leds/led_gpio7"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_gpio7_FULL_NAME "led_gpio7"
#define DT_N_S_leds_S_led_gpio7_FULL_NAME_UNQUOTED led_gpio7
#define DT_N_S_leds_S_led_gpio7_FULL_NAME_TOKEN led_gpio7
#define DT_N_S_leds_S_led_gpio7_FULL_NAME_UPPER_TOKEN LED_GPIO7

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_gpio7_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_gpio7_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_gpio7_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_gpio7_FOREACH_NODELABEL(fn) fn(mcu_led)
#define DT_N_S_leds_S_led_gpio7_FOREACH_NODELABEL_VARGS(fn, ...) fn(mcu_led, __VA_ARGS__)
#define DT_N_S_leds_S_led_gpio7_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_gpio7_CHILD_NUM 0
#define DT_N_S_leds_S_led_gpio7_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_gpio7_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_gpio7_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_gpio7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_gpio7_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_gpio7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_gpio7_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_gpio7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_gpio7_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's hash: */
#define DT_N_S_leds_S_led_gpio7_HASH VXAkquPjA6FBVU0PUIN7GRgN5wVX3DGg4BUh97Onhs8

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_gpio7_ORD 32
#define DT_N_S_leds_S_led_gpio7_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_gpio7_REQUIRES_ORDS \
	28, /* /gpio@4201010 */ \
	29, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_gpio7_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_gpio7_EXISTS 1
#define DT_N_ALIAS_led0        DT_N_S_leds_S_led_gpio7
#define DT_N_NODELABEL_mcu_led DT_N_S_leds_S_led_gpio7

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_gpio7_REG_NUM 0
#define DT_N_S_leds_S_led_gpio7_RANGES_NUM 0
#define DT_N_S_leds_S_led_gpio7_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_gpio7_IRQ_NUM 0
#define DT_N_S_leds_S_led_gpio7_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_gpio7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_gpio7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_gpio7_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_gpio7_P_gpios_IDX_0_PH DT_N_S_gpio_4201010
#define DT_N_S_leds_S_led_gpio7_P_gpios_IDX_0_VAL_pin 9
#define DT_N_S_leds_S_led_gpio7_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_gpio7_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_gpio7_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_gpio7_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_gpio7, gpios, 0)
#define DT_N_S_leds_S_led_gpio7_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_gpio7, gpios, 0)
#define DT_N_S_leds_S_led_gpio7_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_gpio7, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_gpio7_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_gpio7, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_gpio7_P_gpios_LEN 1
#define DT_N_S_leds_S_led_gpio7_P_gpios_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_sram           DT_N_S_memory_0
#define DT_CHOSEN_zephyr_sram_EXISTS    1
#define DT_CHOSEN_zephyr_console        DT_N_S_uart_2810000
#define DT_CHOSEN_zephyr_console_EXISTS 1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_gpio_4201010) fn(DT_N_S_uart_4a00000) fn(DT_N_S_pinctrl_f4000) fn(DT_N_S_pinctrl_f4000_S_uart1_rx_default) fn(DT_N_S_pinctrl_f4000_S_uart1_tx_default) fn(DT_N_S_gpio_600010) fn(DT_N_S_gpio_601010) fn(DT_N_S_uart_2800000) fn(DT_N_S_uart_2810000) fn(DT_N_S_uart_2820000) fn(DT_N_S_uart_2830000) fn(DT_N_S_uart_2840000) fn(DT_N_S_uart_2850000) fn(DT_N_S_uart_2860000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_memory_0) fn(DT_N_S_memory_41010000) fn(DT_N_S_interrupt_controller_7ff0000) fn(DT_N_S_timer_4800000) fn(DT_N_S_memory_a1000000) fn(DT_N_S_memory_a1100000) fn(DT_N_S_memory_a1200000) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_gpio7) fn(DT_N_S_leds_S_btn_gpio24) fn(DT_N_S_leds_S_btn_gpio23) fn(DT_N_S_pinctrl_mcu_4084000) fn(DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_gpio_4201010) fn(DT_N_S_pinctrl_f4000) fn(DT_N_S_pinctrl_f4000_S_uart1_rx_default) fn(DT_N_S_pinctrl_f4000_S_uart1_tx_default) fn(DT_N_S_uart_2810000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_memory_0) fn(DT_N_S_memory_41010000) fn(DT_N_S_interrupt_controller_7ff0000) fn(DT_N_S_timer_4800000) fn(DT_N_S_memory_a1000000) fn(DT_N_S_memory_a1100000) fn(DT_N_S_memory_a1200000) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_gpio7) fn(DT_N_S_leds_S_btn_gpio24) fn(DT_N_S_leds_S_btn_gpio23) fn(DT_N_S_pinctrl_mcu_4084000) fn(DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_gpio_4201010, __VA_ARGS__) fn(DT_N_S_uart_4a00000, __VA_ARGS__) fn(DT_N_S_pinctrl_f4000, __VA_ARGS__) fn(DT_N_S_pinctrl_f4000_S_uart1_rx_default, __VA_ARGS__) fn(DT_N_S_pinctrl_f4000_S_uart1_tx_default, __VA_ARGS__) fn(DT_N_S_gpio_600010, __VA_ARGS__) fn(DT_N_S_gpio_601010, __VA_ARGS__) fn(DT_N_S_uart_2800000, __VA_ARGS__) fn(DT_N_S_uart_2810000, __VA_ARGS__) fn(DT_N_S_uart_2820000, __VA_ARGS__) fn(DT_N_S_uart_2830000, __VA_ARGS__) fn(DT_N_S_uart_2840000, __VA_ARGS__) fn(DT_N_S_uart_2850000, __VA_ARGS__) fn(DT_N_S_uart_2860000, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_memory_0, __VA_ARGS__) fn(DT_N_S_memory_41010000, __VA_ARGS__) fn(DT_N_S_interrupt_controller_7ff0000, __VA_ARGS__) fn(DT_N_S_timer_4800000, __VA_ARGS__) fn(DT_N_S_memory_a1000000, __VA_ARGS__) fn(DT_N_S_memory_a1100000, __VA_ARGS__) fn(DT_N_S_memory_a1200000, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_gpio7, __VA_ARGS__) fn(DT_N_S_leds_S_btn_gpio24, __VA_ARGS__) fn(DT_N_S_leds_S_btn_gpio23, __VA_ARGS__) fn(DT_N_S_pinctrl_mcu_4084000, __VA_ARGS__) fn(DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_gpio_4201010, __VA_ARGS__) fn(DT_N_S_pinctrl_f4000, __VA_ARGS__) fn(DT_N_S_pinctrl_f4000_S_uart1_rx_default, __VA_ARGS__) fn(DT_N_S_pinctrl_f4000_S_uart1_tx_default, __VA_ARGS__) fn(DT_N_S_uart_2810000, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_memory_0, __VA_ARGS__) fn(DT_N_S_memory_41010000, __VA_ARGS__) fn(DT_N_S_interrupt_controller_7ff0000, __VA_ARGS__) fn(DT_N_S_timer_4800000, __VA_ARGS__) fn(DT_N_S_memory_a1000000, __VA_ARGS__) fn(DT_N_S_memory_a1100000, __VA_ARGS__) fn(DT_N_S_memory_a1200000, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_gpio7, __VA_ARGS__) fn(DT_N_S_leds_S_btn_gpio24, __VA_ARGS__) fn(DT_N_S_leds_S_btn_gpio23, __VA_ARGS__) fn(DT_N_S_pinctrl_mcu_4084000, __VA_ARGS__) fn(DT_N_S_pinctrl_mcu_4084000_S_mcu_gpio0_led_btn_default, __VA_ARGS__)

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_beagle_beagley_ai 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_ti_davinci_gpio 1
#define DT_COMPAT_HAS_OKAY_ti_k3_pinctrl 1
#define DT_COMPAT_HAS_OKAY_ns16550 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_r5 1
#define DT_COMPAT_HAS_OKAY_zephyr_memory_region 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_ti_vim 1
#define DT_COMPAT_HAS_OKAY_ti_am654_timer 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_beagle_beagley_ai_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_ti_davinci_gpio_NUM_OKAY 1
#define DT_N_INST_ti_k3_pinctrl_NUM_OKAY 2
#define DT_N_INST_ns16550_NUM_OKAY 1
#define DT_N_INST_arm_cortex_r5_NUM_OKAY 1
#define DT_N_INST_zephyr_memory_region_NUM_OKAY 4
#define DT_N_INST_mmio_sram_NUM_OKAY 5
#define DT_N_INST_ti_vim_NUM_OKAY 1
#define DT_N_INST_ti_am654_timer_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_FOREACH_OKAY_beagle_beagley_ai(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_beagle_beagley_ai(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_beagle_beagley_ai(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_beagle_beagley_ai(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_davinci_gpio(fn) fn(DT_N_S_gpio_4201010)
#define DT_FOREACH_OKAY_VARGS_ti_davinci_gpio(fn, ...) fn(DT_N_S_gpio_4201010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_davinci_gpio(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ti_davinci_gpio(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_k3_pinctrl(fn) fn(DT_N_S_pinctrl_f4000) fn(DT_N_S_pinctrl_mcu_4084000)
#define DT_FOREACH_OKAY_VARGS_ti_k3_pinctrl(fn, ...) fn(DT_N_S_pinctrl_f4000, __VA_ARGS__) fn(DT_N_S_pinctrl_mcu_4084000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_k3_pinctrl(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_ti_k3_pinctrl(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_ns16550(fn) fn(DT_N_S_uart_2810000)
#define DT_FOREACH_OKAY_VARGS_ns16550(fn, ...) fn(DT_N_S_uart_2810000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ns16550(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ns16550(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_r5(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_r5(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_r5(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_r5(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_memory_region(fn) fn(DT_N_S_memory_0) fn(DT_N_S_memory_41010000) fn(DT_N_S_memory_a1100000) fn(DT_N_S_memory_a1200000)
#define DT_FOREACH_OKAY_VARGS_zephyr_memory_region(fn, ...) fn(DT_N_S_memory_0, __VA_ARGS__) fn(DT_N_S_memory_41010000, __VA_ARGS__) fn(DT_N_S_memory_a1100000, __VA_ARGS__) fn(DT_N_S_memory_a1200000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_memory_region(fn) fn(0) fn(1) fn(2) fn(3)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_memory_region(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_memory_0) fn(DT_N_S_memory_41010000) fn(DT_N_S_memory_a1000000) fn(DT_N_S_memory_a1100000) fn(DT_N_S_memory_a1200000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_memory_0, __VA_ARGS__) fn(DT_N_S_memory_41010000, __VA_ARGS__) fn(DT_N_S_memory_a1000000, __VA_ARGS__) fn(DT_N_S_memory_a1100000, __VA_ARGS__) fn(DT_N_S_memory_a1200000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0) fn(1) fn(2) fn(3) fn(4)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_vim(fn) fn(DT_N_S_interrupt_controller_7ff0000)
#define DT_FOREACH_OKAY_VARGS_ti_vim(fn, ...) fn(DT_N_S_interrupt_controller_7ff0000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_vim(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ti_vim(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ti_am654_timer(fn) fn(DT_N_S_timer_4800000)
#define DT_FOREACH_OKAY_VARGS_ti_am654_timer(fn, ...) fn(DT_N_S_timer_4800000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ti_am654_timer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ti_am654_timer(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
